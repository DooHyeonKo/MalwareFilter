using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;
using Features;
using Microsoft.ML;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using System.Reflection;
using MalwareFilter.ScanEngine;
using System.IO.Compression;
using static MalwareFilter.StaticDetectorModel;

namespace MalwareFilter
{
    public class FilterModel
    {
        public FilterResult FilterResult = FilterResult.None;

        public void AddTag(string Tag)
        {
            Tags += $"{Tag} ";
        }

        public string Tags = "";
    }

    public enum FilterResult
    {
        Block,
        Allow,
        Suspect,
        Error,
        Excluded,
        OldDB,
        None
    }

    public class StaticFilter
    {
        public string WhiteList = "";
        public string BlackList = "";
        public string ImpHashList = "";
        private KavEngine m_AVEngine = new KavEngine();
        public void InitFilter()
        {
            var m_CurrentPath = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetEntryAssembly().Location);
            var m_WhiteListPath = m_CurrentPath + "\\Bases\\whitelist.db";
            var m_BlackListPath = m_CurrentPath + "\\Bases\\blacklist.db";
            var m_ImpHashListPath = m_CurrentPath + "\\Bases\\implist.db";
            this.WhiteList = File.ReadAllText(m_WhiteListPath);
            this.BlackList = File.ReadAllText(m_BlackListPath);
            this.ImpHashList = File.ReadAllText(m_ImpHashListPath);
            this.m_AVEngine.LoadVDB();
        }

        public int CheckFile(string FilePath)
        {
            byte[] m_Buffer = File.ReadAllBytes(FilePath);

            var filterModel = new FilterModel();
            var filterResult = FilterResult.None;

            int FilterLevel = 0;

            ApkParser m_ApkParser = new ApkParser();

            try
            {
                m_ApkParser.GetApkHeader(FilePath);
            }
            catch (Exception)
            {

            }

            if (m_Buffer[0] == 0x4D && m_Buffer[1] == 0x5A)
            {
                try
                {
                    PeFile m_PeFile = new PeFile(FilePath);
                }
                catch (Exception)
                {
                    FilterLevel += 5;
                }
            }

            try
            {
                if (PeFile.IsPEFile(FilePath))
                {
                    PeFile __PeFile = new PeFile(FilePath);

                    // Is Double Extension?
                    if (!Regex.IsMatch(Path.GetFileName(FilePath), @"^[A-Za-z0-9-_,\s]+[.]{1}[A-Za-z]{3}$"))
                    {
                        FilterLevel += 1;
                    }

                    // Check default file information

                    var fileVersionInfo = FileVersionInfo.GetVersionInfo(FilePath);

                    if (fileVersionInfo.FileVersion == null)
                    {
                        FilterLevel += 1;
                    }
                    else if (fileVersionInfo.FileDescription == null)
                    {
                        FilterLevel += 1;
                    }
                    else if (fileVersionInfo.OriginalFilename == null)
                    {
                        FilterLevel += 1;
                    }
                    else if (fileVersionInfo.Language == null)
                    {
                        FilterLevel += 1;
                    }
                    else if (fileVersionInfo.ProductName == null)
                    {
                        FilterLevel += 1;
                    }

                    // Check certificate information

                    try
                    {
                        X509Certificate certificate = X509Certificate.CreateFromSignedFile(FilePath);
                        certificate = new X509Certificate2(certificate);
                    }
                    catch (Exception)
                    {
                        FilterLevel += 5;
                        filterModel.AddTag("Not_Signed");
                    }

                    using (var md5 = MD5.Create())
                    {
                        using (var stream = File.OpenRead(FilePath))
                        {
                            var hash = md5.ComputeHash(stream);
                            var newHash = BitConverter.ToString(hash).Replace("-", "").ToUpper();

                            if (!WhiteList.Contains(newHash))
                            {
                                FilterLevel += 5;
                                filterModel.AddTag("WhiteList");
                            }
                            else if (BlackList.Contains(newHash))
                            {
                                FilterLevel += 5;
                                filterModel.AddTag("BlackList");
                            }
                        }
                    }

                    int[] numArray = new int[0x100];
                    byte[] buffer = m_Buffer;
                    for (int i = 0; i < 0x100; i++)
                    {
                        numArray[i] = 0;
                    }

                    for (int j = 0; j < (buffer.Length - 1); j++)
                    {
                        int index = buffer[j];
                        numArray[index]++;
                    }
                    int length = buffer.Length;
                    float entropy = 0f;
                    for (int k = 0; k < 0x100; k++)
                    {
                        if ((numArray[k] != 0) && (k != 0))
                        {
                            entropy += (-float.Parse(numArray[k].ToString()) / float.Parse(length.ToString())) * float.Parse(Math.Log((double)(float.Parse(numArray[k].ToString()) / float.Parse(length.ToString())), 2.0).ToString());
                        }
                    }

                    if (entropy > 6)
                    {
                        FilterLevel += 5;
                        filterModel.AddTag("Malicious_Entropy");
                    }

                    try
                    {
                        using (FileStream originalFileStream = new FileStream(FilePath, FileMode.Open))
                        using (GZipStream decompressionStream = new GZipStream(originalFileStream, CompressionMode.Decompress))
                        using (FileStream targetFileStream = new FileStream(FilePath, FileMode.Create))
                        {
                            decompressionStream.CopyTo(targetFileStream);
                            FilterLevel += 40;
                            filterModel.AddTag("PE_GZIP");
                        }
                    }
                    catch (Exception)
                    {

                    }

                    if (__PeFile.ImportedFunctions != null)
                    {
                        foreach (var m_ImportFunction in __PeFile.ImportedFunctions)
                        {
                            if (m_ImportFunction.Name.Contains("Accept"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("AdjustTokenPrivileges"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("AttachThreadInput"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Bind"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("BitBlt"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CertOpenSystemStore"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Connect"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ConnectNamedPipe"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ControlService"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateFileMapping"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateMutex"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateRemoteThread"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateService"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateToolhelp32Snapshot"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptAcquireContext"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("DeviceIoControl"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("EnableExecuteProtectionSupport"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("EnumProcesses"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("EnumProcessModules"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FindFirstFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FindNextFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FindResource"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FindWindow"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FtpPutFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetAdaptersInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetAsyncKeyState"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetDC"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetForegroundWindow"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Gethostbyname"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Gethostname"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetKeyState"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetModuleFilename"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetModuleHandle"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetProcAddress"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetStartupInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetSystemDefaultLangId"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetTempPath"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetThreadContext"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetVersionEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetWindowsDirectory"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("inet_addr"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetOpen"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetOpenUrl"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetReadFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetWriteFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("IsNTAdmin"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("IsWoW64Process"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("LdrLoadDll"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("LoadResource"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("LsaEnumerateLogonSessions"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("MapViewOfFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("MapVirtualKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Module32First"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Module32Next"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("NetScheduleJobAdd"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("NetShareEnum"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("NtQueryDirectoryFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("NtQueryInformationProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("NtSetInformationProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("OpenMutex"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("OpenProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("OutputDebugString"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("PeekNamedPipe"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Process32First"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Process32Next"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("QueueUserAPC"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ReadProcessMemory"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Recv"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegisterHotKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegOpenKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ResumeThread"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RtlCreateRegistryKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RtlWriteRegistryValue"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SamIConnect"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SamIGetPrivateData"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SamQueryInformationUse"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Send"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SetFileTime"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SetThreadContext"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SetWindowsHookEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SfcTerminateWatcherThread"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ShellExecute"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("StartServiceCtrlDispatcher"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SuspendThread"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Thread32First"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Thread32Next"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("Toolhelp32ReadProcessMemory"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("URLDownloadToFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("VirtualAllocEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("VirtualProtectEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("WideCharToMultiByte"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("WinExec"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("WriteProcessMemory"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("WSAStartup"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegSetValueEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegCreateKeyEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegEnumKeyEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegQueryValueEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegOpenKeyEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegCloseKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("RegEnumValue"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetCurrentProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetCurrentProessId"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CreateThread"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("SetThreadPriority"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetProcessTimes"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ExitProcess"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetFileVersionInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetFileVersionInfoSize"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetSystemMetrics"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetSystemInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetNativeSystemInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("IsDebuggerPresent"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("QueryPerformanceCounter"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("DeleteFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetFileType"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("MoveFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetFileAttributes"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CopyFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("FindFirstFileEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("GetFileSize"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("ReadFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("EnableWindow"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptDeriveKey"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptEncrypt"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptDecrypt"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptCreateHash"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("CryptHashData"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("HttpQueryInfo"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("HttpSendRequestEx"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("HttpEndRequest"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("HttpOpenRequest"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetConnectA"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetGetConnectedState"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetSetOptionA"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetWriteFile"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetCrackUrlA"))
                            {
                                FilterLevel += 5;
                            }
                            else if (m_ImportFunction.Name.Contains("InternetSetStatusCallbackA"))
                            {
                                FilterLevel += 5;
                            }

                            
                        }


                    }
                    else
                    {
                        FilterLevel += 5;
                    }

                    // Check Packer

                    int m_Sections = __PeFile.ImageSectionHeaders.Length;

                    for (int i = 0; i < m_Sections - 1; i++)
                    {
                        uint m_PointerToRawData = __PeFile.ImageSectionHeaders[i].PointerToRawData;
                        uint m_SizeOfRawData = __PeFile.ImageSectionHeaders[i].SizeOfRawData;
                        uint m_VirtualAddress = __PeFile.ImageSectionHeaders[i].VirtualAddress;
                        uint m_VirtualSize = __PeFile.ImageSectionHeaders[i].VirtualSize;

                        byte[] m_SectionBuffer = m_Buffer.Slice((int)m_PointerToRawData, (int)m_PointerToRawData + (int)m_SizeOfRawData);
                        var m_SectionEntropy = (int)GetEntropy(m_SectionBuffer);
                        var m_SectionMD5 = GetMd5HashBuffer(m_SectionBuffer);

                        if (m_SectionMD5.Contains("d41d8cd98f00b204e9800998ecf8427e"))
                        {
                            FilterLevel += 20;
                            filterModel.AddTag("Packed");
                        }

                        if (m_SectionEntropy > 6)
                        {
                            FilterLevel += 20;
                            filterModel.AddTag("Suspect_Section_Entropy");
                        }

                        if (m_SectionEntropy < 1)
                        {
                            FilterLevel += 20;
                            filterModel.AddTag("Suspect_Section_Entropy");
                        }
                    }
                    var m_ImpHash = __PeFile.ImpHash.ToUpper();

                    if (ImpHashList.Contains(m_ImpHash))
                    {
                        FilterLevel += 30;
                        filterModel.AddTag("ImpHash");
                    }
                 
                }

                PeFile m_PeFile = new PeFile(FilePath);

                // Check ML Detection
                StaticDetectorModel.ModelInput m_ModelInput = new ModelInput();

                m_ModelInput.Col0 = m_PeFile.MD5;
                m_ModelInput.Col1 = m_PeFile.ImageDosHeader.e_cblp;
                m_ModelInput.Col2 = m_PeFile.ImageDosHeader.e_cp;
                m_ModelInput.Col3 = m_PeFile.ImageDosHeader.e_cparhdr;
                m_ModelInput.Col4 = m_PeFile.ImageDosHeader.e_crlc;
                m_ModelInput.Col5 = m_PeFile.ImageDosHeader.e_cs;
                m_ModelInput.Col6 = m_PeFile.ImageDosHeader.e_csum;
                m_ModelInput.Col7 = m_PeFile.ImageDosHeader.e_ip;
                m_ModelInput.Col8 = m_PeFile.ImageDosHeader.e_lfanew;
                m_ModelInput.Col9 = m_PeFile.ImageDosHeader.e_lfarlc;
                m_ModelInput.Col10 = m_PeFile.ImageDosHeader.e_magic;
                m_ModelInput.Col11 = m_PeFile.ImageDosHeader.e_maxalloc;
                m_ModelInput.Col12 = m_PeFile.ImageDosHeader.e_minalloc;
                m_ModelInput.Col13 = m_PeFile.ImageDosHeader.e_oemid;
                m_ModelInput.Col14 = m_PeFile.ImageDosHeader.e_oeminfo;
                m_ModelInput.Col15 = m_PeFile.ImageDosHeader.e_ovno;
                m_ModelInput.Col16 = m_PeFile.ImageDosHeader.e_sp;
                m_ModelInput.Col17 = m_PeFile.ImageDosHeader.e_ss;

                m_ModelInput.Col18 = m_PeFile.ImageNtHeaders.FileHeader.Characteristics;
                m_ModelInput.Col19 = m_PeFile.ImageNtHeaders.FileHeader.Machine;
                m_ModelInput.Col20 = m_PeFile.ImageNtHeaders.FileHeader.NumberOfSections;
                m_ModelInput.Col21 = m_PeFile.ImageNtHeaders.FileHeader.NumberOfSymbols;
                m_ModelInput.Col22 = m_PeFile.ImageNtHeaders.FileHeader.PointerToSymbolTable;
                m_ModelInput.Col23 = m_PeFile.ImageNtHeaders.FileHeader.SizeOfOptionalHeader;
                m_ModelInput.Col24 = m_PeFile.ImageNtHeaders.FileHeader.TimeDateStamp;

                m_ModelInput.Col25 = m_PeFile.ImageNtHeaders.OptionalHeader.MajorLinkerVersion;
                m_ModelInput.Col26 = m_PeFile.ImageNtHeaders.OptionalHeader.MinorLinkerVersion;
                m_ModelInput.Col27 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfCode;
                m_ModelInput.Col28 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfInitializedData;
                m_ModelInput.Col29 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfUninitializedData;
                m_ModelInput.Col30 = m_PeFile.ImageNtHeaders.OptionalHeader.AddressOfEntryPoint;
                m_ModelInput.Col31 = m_PeFile.ImageNtHeaders.OptionalHeader.BaseOfData;
                m_ModelInput.Col32 = m_PeFile.ImageNtHeaders.OptionalHeader.BaseOfCode;
                m_ModelInput.Col33 = m_PeFile.ImageNtHeaders.OptionalHeader.ImageBase;
                m_ModelInput.Col34 = m_PeFile.ImageNtHeaders.OptionalHeader.SectionAlignment;
                m_ModelInput.Col35 = m_PeFile.ImageNtHeaders.OptionalHeader.FileAlignment;
                m_ModelInput.Col36 = m_PeFile.ImageNtHeaders.OptionalHeader.MajorOperatingSystemVersion;
                m_ModelInput.Col37 = m_PeFile.ImageNtHeaders.OptionalHeader.MinorOperatingSystemVersion;
                m_ModelInput.Col38 = m_PeFile.ImageNtHeaders.OptionalHeader.MajorImageVersion;
                m_ModelInput.Col39 = m_PeFile.ImageNtHeaders.OptionalHeader.MinorImageVersion;
                m_ModelInput.Col40 = m_PeFile.ImageNtHeaders.OptionalHeader.MajorSubsystemVersion;
                m_ModelInput.Col41 = m_PeFile.ImageNtHeaders.OptionalHeader.MinorSubsystemVersion;
                m_ModelInput.Col42 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfImage;
                m_ModelInput.Col43 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfHeaders;
                m_ModelInput.Col44 = m_PeFile.ImageNtHeaders.OptionalHeader.CheckSum;
                m_ModelInput.Col45 = m_PeFile.ImageNtHeaders.OptionalHeader.Subsystem;
                m_ModelInput.Col46 = m_PeFile.ImageNtHeaders.OptionalHeader.DllCharacteristics;
                m_ModelInput.Col47 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfStackReserve;
                m_ModelInput.Col48 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfStackCommit;
                m_ModelInput.Col49 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfHeapReserve;
                m_ModelInput.Col50 = m_PeFile.ImageNtHeaders.OptionalHeader.SizeOfHeapCommit;
                m_ModelInput.Col51 = m_PeFile.ImageNtHeaders.OptionalHeader.LoaderFlags;
                m_ModelInput.Col52 = m_PeFile.ImageNtHeaders.OptionalHeader.NumberOfRvaAndSizes;

                uint sCharacteristics1 = 0;
                uint sCharacteristics2 = 0;
                uint sCharacteristics3 = 0;
                uint sCharacteristics4 = 0;
                uint sCharacteristics5 = 0;
                uint sCharacteristics6 = 0;
                uint sCharacteristics7 = 0;
                uint sCharacteristics8 = 0;

                ushort NumberOfLinenumbers1 = 0;
                ushort NumberOfLinenumbers2 = 0;
                ushort NumberOfLinenumbers3 = 0;
                ushort NumberOfLinenumbers4 = 0;
                ushort NumberOfLinenumbers5 = 0;
                ushort NumberOfLinenumbers6 = 0;
                ushort NumberOfLinenumbers7 = 0;
                ushort NumberOfLinenumbers8 = 0;

                ushort NumberOfRelocations1 = 0;
                ushort NumberOfRelocations2 = 0;
                ushort NumberOfRelocations3 = 0;
                ushort NumberOfRelocations4 = 0;
                ushort NumberOfRelocations5 = 0;
                ushort NumberOfRelocations6 = 0;
                ushort NumberOfRelocations7 = 0;
                ushort NumberOfRelocations8 = 0;

                uint PhysicalAddress1 = 0;
                uint PhysicalAddress2 = 0;
                uint PhysicalAddress3 = 0;
                uint PhysicalAddress4 = 0;
                uint PhysicalAddress5 = 0;
                uint PhysicalAddress6 = 0;
                uint PhysicalAddress7 = 0;
                uint PhysicalAddress8 = 0;

                uint PointerToLinenumbers1 = 0;
                uint PointerToLinenumbers2 = 0;
                uint PointerToLinenumbers3 = 0;
                uint PointerToLinenumbers4 = 0;
                uint PointerToLinenumbers5 = 0;
                uint PointerToLinenumbers6 = 0;
                uint PointerToLinenumbers7 = 0;
                uint PointerToLinenumbers8 = 0;

                uint PointerToRawData1 = 0;
                uint PointerToRawData2 = 0;
                uint PointerToRawData3 = 0;
                uint PointerToRawData4 = 0;
                uint PointerToRawData5 = 0;
                uint PointerToRawData6 = 0;
                uint PointerToRawData7 = 0;
                uint PointerToRawData8 = 0;

                uint PointerToRelocations1 = 0;
                uint PointerToRelocations2 = 0;
                uint PointerToRelocations3 = 0;
                uint PointerToRelocations4 = 0;
                uint PointerToRelocations5 = 0;
                uint PointerToRelocations6 = 0;
                uint PointerToRelocations7 = 0;
                uint PointerToRelocations8 = 0;

                uint SizeOfRawData1 = 0;
                uint SizeOfRawData2 = 0;
                uint SizeOfRawData3 = 0;
                uint SizeOfRawData4 = 0;
                uint SizeOfRawData5 = 0;
                uint SizeOfRawData6 = 0;
                uint SizeOfRawData7 = 0;
                uint SizeOfRawData8 = 0;

                uint VirtualAddress1 = 0;
                uint VirtualAddress2 = 0;
                uint VirtualAddress3 = 0;
                uint VirtualAddress4 = 0;
                uint VirtualAddress5 = 0;
                uint VirtualAddress6 = 0;
                uint VirtualAddress7 = 0;
                uint VirtualAddress8 = 0;

                uint VirtualSize1 = 0;
                uint VirtualSize2 = 0;
                uint VirtualSize3 = 0;
                uint VirtualSize4 = 0;
                uint VirtualSize5 = 0;
                uint VirtualSize6 = 0;
                uint VirtualSize7 = 0;
                uint VirtualSize8 = 0;

                sCharacteristics1 = m_PeFile.ImageSectionHeaders[0].Characteristics;
                sCharacteristics2 = m_PeFile.ImageSectionHeaders[1].Characteristics;
                sCharacteristics3 = m_PeFile.ImageSectionHeaders[2].Characteristics;
                sCharacteristics4 = m_PeFile.ImageSectionHeaders[3].Characteristics;
                sCharacteristics5 = m_PeFile.ImageSectionHeaders[4].Characteristics;
                sCharacteristics6 = m_PeFile.ImageSectionHeaders[5].Characteristics;
                sCharacteristics7 = m_PeFile.ImageSectionHeaders[6].Characteristics;
                sCharacteristics8 = m_PeFile.ImageSectionHeaders[7].Characteristics;

                NumberOfLinenumbers1 = m_PeFile.ImageSectionHeaders[0].NumberOfLinenumbers;
                NumberOfLinenumbers2 = m_PeFile.ImageSectionHeaders[1].NumberOfLinenumbers;
                NumberOfLinenumbers3 = m_PeFile.ImageSectionHeaders[2].NumberOfLinenumbers;
                NumberOfLinenumbers4 = m_PeFile.ImageSectionHeaders[3].NumberOfLinenumbers;
                NumberOfLinenumbers5 = m_PeFile.ImageSectionHeaders[4].NumberOfLinenumbers;
                NumberOfLinenumbers6 = m_PeFile.ImageSectionHeaders[5].NumberOfLinenumbers;
                NumberOfLinenumbers7 = m_PeFile.ImageSectionHeaders[6].NumberOfLinenumbers;
                NumberOfLinenumbers8 = m_PeFile.ImageSectionHeaders[7].NumberOfLinenumbers;

                NumberOfRelocations1 = m_PeFile.ImageSectionHeaders[0].NumberOfRelocations;
                NumberOfRelocations2 = m_PeFile.ImageSectionHeaders[1].NumberOfRelocations;
                NumberOfRelocations3 = m_PeFile.ImageSectionHeaders[2].NumberOfRelocations;
                NumberOfRelocations4 = m_PeFile.ImageSectionHeaders[3].NumberOfRelocations;
                NumberOfRelocations5 = m_PeFile.ImageSectionHeaders[4].NumberOfRelocations;
                NumberOfRelocations6 = m_PeFile.ImageSectionHeaders[5].NumberOfRelocations;
                NumberOfRelocations7 = m_PeFile.ImageSectionHeaders[6].NumberOfRelocations;
                NumberOfRelocations8 = m_PeFile.ImageSectionHeaders[7].NumberOfRelocations;

                PhysicalAddress1 = m_PeFile.ImageSectionHeaders[0].PhysicalAddress;
                PhysicalAddress2 = m_PeFile.ImageSectionHeaders[1].PhysicalAddress;
                PhysicalAddress3 = m_PeFile.ImageSectionHeaders[2].PhysicalAddress;
                PhysicalAddress4 = m_PeFile.ImageSectionHeaders[3].PhysicalAddress;
                PhysicalAddress5 = m_PeFile.ImageSectionHeaders[4].PhysicalAddress;
                PhysicalAddress6 = m_PeFile.ImageSectionHeaders[5].PhysicalAddress;
                PhysicalAddress7 = m_PeFile.ImageSectionHeaders[6].PhysicalAddress;
                PhysicalAddress8 = m_PeFile.ImageSectionHeaders[7].PhysicalAddress;

                PointerToLinenumbers1 = m_PeFile.ImageSectionHeaders[0].PointerToLinenumbers;
                PointerToLinenumbers2 = m_PeFile.ImageSectionHeaders[1].PointerToLinenumbers;
                PointerToLinenumbers3 = m_PeFile.ImageSectionHeaders[2].PointerToLinenumbers;
                PointerToLinenumbers4 = m_PeFile.ImageSectionHeaders[3].PointerToLinenumbers;
                PointerToLinenumbers5 = m_PeFile.ImageSectionHeaders[4].PointerToLinenumbers;
                PointerToLinenumbers6 = m_PeFile.ImageSectionHeaders[5].PointerToLinenumbers;
                PointerToLinenumbers7 = m_PeFile.ImageSectionHeaders[6].PointerToLinenumbers;
                PointerToLinenumbers8 = m_PeFile.ImageSectionHeaders[7].PointerToLinenumbers;

                PointerToRawData1 = m_PeFile.ImageSectionHeaders[0].PointerToRawData;
                PointerToRawData2 = m_PeFile.ImageSectionHeaders[1].PointerToRawData;
                PointerToRawData3 = m_PeFile.ImageSectionHeaders[2].PointerToRawData;
                PointerToRawData4 = m_PeFile.ImageSectionHeaders[3].PointerToRawData;
                PointerToRawData5 = m_PeFile.ImageSectionHeaders[4].PointerToRawData;
                PointerToRawData6 = m_PeFile.ImageSectionHeaders[5].PointerToRawData;
                PointerToRawData7 = m_PeFile.ImageSectionHeaders[6].PointerToRawData;
                PointerToRawData8 = m_PeFile.ImageSectionHeaders[7].PointerToRawData;

                PointerToRelocations1 = m_PeFile.ImageSectionHeaders[0].PointerToRelocations;
                PointerToRelocations2 = m_PeFile.ImageSectionHeaders[1].PointerToRelocations;
                PointerToRelocations3 = m_PeFile.ImageSectionHeaders[2].PointerToRelocations;
                PointerToRelocations4 = m_PeFile.ImageSectionHeaders[3].PointerToRelocations;
                PointerToRelocations5 = m_PeFile.ImageSectionHeaders[4].PointerToRelocations;
                PointerToRelocations6 = m_PeFile.ImageSectionHeaders[5].PointerToRelocations;
                PointerToRelocations7 = m_PeFile.ImageSectionHeaders[6].PointerToRelocations;
                PointerToRelocations8 = m_PeFile.ImageSectionHeaders[7].PointerToRelocations;

                SizeOfRawData1 = m_PeFile.ImageSectionHeaders[0].SizeOfRawData;
                SizeOfRawData2 = m_PeFile.ImageSectionHeaders[1].SizeOfRawData;
                SizeOfRawData3 = m_PeFile.ImageSectionHeaders[2].SizeOfRawData;
                SizeOfRawData4 = m_PeFile.ImageSectionHeaders[3].SizeOfRawData;
                SizeOfRawData5 = m_PeFile.ImageSectionHeaders[4].SizeOfRawData;
                SizeOfRawData6 = m_PeFile.ImageSectionHeaders[5].SizeOfRawData;
                SizeOfRawData7 = m_PeFile.ImageSectionHeaders[6].SizeOfRawData;
                SizeOfRawData8 = m_PeFile.ImageSectionHeaders[7].SizeOfRawData;

                VirtualAddress1 = m_PeFile.ImageSectionHeaders[0].VirtualAddress;
                VirtualAddress2 = m_PeFile.ImageSectionHeaders[1].VirtualAddress;
                VirtualAddress3 = m_PeFile.ImageSectionHeaders[2].VirtualAddress;
                VirtualAddress4 = m_PeFile.ImageSectionHeaders[3].VirtualAddress;
                VirtualAddress5 = m_PeFile.ImageSectionHeaders[4].VirtualAddress;
                VirtualAddress6 = m_PeFile.ImageSectionHeaders[5].VirtualAddress;
                VirtualAddress7 = m_PeFile.ImageSectionHeaders[6].VirtualAddress;
                VirtualAddress8 = m_PeFile.ImageSectionHeaders[7].VirtualAddress;

                VirtualSize1 = m_PeFile.ImageSectionHeaders[0].VirtualSize;
                VirtualSize2 = m_PeFile.ImageSectionHeaders[1].VirtualSize;
                VirtualSize3 = m_PeFile.ImageSectionHeaders[2].VirtualSize;
                VirtualSize4 = m_PeFile.ImageSectionHeaders[3].VirtualSize;
                VirtualSize5 = m_PeFile.ImageSectionHeaders[4].VirtualSize;
                VirtualSize6 = m_PeFile.ImageSectionHeaders[5].VirtualSize;
                VirtualSize7 = m_PeFile.ImageSectionHeaders[6].VirtualSize;
                VirtualSize8 = m_PeFile.ImageSectionHeaders[7].VirtualSize;

                m_ModelInput.Col53 = sCharacteristics1;
                m_ModelInput.Col54 = sCharacteristics2;
                m_ModelInput.Col55 = sCharacteristics3;
                m_ModelInput.Col56 = sCharacteristics4;
                m_ModelInput.Col57 = sCharacteristics5;
                m_ModelInput.Col58 = sCharacteristics6;
                m_ModelInput.Col59 = sCharacteristics7;
                m_ModelInput.Col60 = sCharacteristics8;

                m_ModelInput.Col61 = NumberOfLinenumbers1;
                m_ModelInput.Col62 = NumberOfLinenumbers2;
                m_ModelInput.Col63 = NumberOfLinenumbers3;
                m_ModelInput.Col64 = NumberOfLinenumbers4;
                m_ModelInput.Col65 = NumberOfLinenumbers5;
                m_ModelInput.Col66 = NumberOfLinenumbers6;
                m_ModelInput.Col67 = NumberOfLinenumbers7;
                m_ModelInput.Col68 = NumberOfLinenumbers8;

                m_ModelInput.Col69 = NumberOfRelocations1;
                m_ModelInput.Col70 = NumberOfRelocations2;
                m_ModelInput.Col71 = NumberOfRelocations3;
                m_ModelInput.Col72 = NumberOfRelocations4;
                m_ModelInput.Col73 = NumberOfRelocations5;
                m_ModelInput.Col74 = NumberOfRelocations6;
                m_ModelInput.Col75 = NumberOfRelocations7;
                m_ModelInput.Col76 = NumberOfRelocations8;

                m_ModelInput.Col77 = PhysicalAddress1;
                m_ModelInput.Col78 = PhysicalAddress2;
                m_ModelInput.Col79 = PhysicalAddress3;
                m_ModelInput.Col80 = PhysicalAddress4;
                m_ModelInput.Col81 = PhysicalAddress5;
                m_ModelInput.Col82 = PhysicalAddress6;
                m_ModelInput.Col83 = PhysicalAddress7;
                m_ModelInput.Col84 = PhysicalAddress8;

                m_ModelInput.Col85 = PointerToLinenumbers1;
                m_ModelInput.Col86 = PointerToLinenumbers2;
                m_ModelInput.Col87 = PointerToLinenumbers3;
                m_ModelInput.Col88 = PointerToLinenumbers4;
                m_ModelInput.Col89 = PointerToLinenumbers5;
                m_ModelInput.Col90 = PointerToLinenumbers6;
                m_ModelInput.Col91 = PointerToLinenumbers7;
                m_ModelInput.Col92 = PointerToLinenumbers8;
                m_ModelInput.Col93 = PointerToRawData1;
                m_ModelInput.Col94 = PointerToRawData2;
                m_ModelInput.Col95 = PointerToRawData3;
                m_ModelInput.Col96 = PointerToRawData4;
                m_ModelInput.Col97 = PointerToRawData5;
                m_ModelInput.Col98 = PointerToRawData6;
                m_ModelInput.Col99 = PointerToRawData7;
                m_ModelInput.Col100 = PointerToRawData8;
                m_ModelInput.Col101 = PointerToRelocations1;
                m_ModelInput.Col102 = PointerToRelocations2;
                m_ModelInput.Col103 = PointerToRelocations3;
                m_ModelInput.Col104 = PointerToRelocations4;
                m_ModelInput.Col105 = PointerToRelocations5;
                m_ModelInput.Col106 = PointerToRelocations6;
                m_ModelInput.Col107 = PointerToRelocations7;
                m_ModelInput.Col108 = PointerToRelocations8;
                m_ModelInput.Col109 = SizeOfRawData1;
                m_ModelInput.Col110 = SizeOfRawData2;
                m_ModelInput.Col111 = SizeOfRawData3;
                m_ModelInput.Col112 = SizeOfRawData4;
                m_ModelInput.Col113 = SizeOfRawData5;
                m_ModelInput.Col114 = SizeOfRawData6;
                m_ModelInput.Col115 = SizeOfRawData7;
                m_ModelInput.Col116 = SizeOfRawData8;
                m_ModelInput.Col117 = VirtualAddress1;
                m_ModelInput.Col118 = VirtualAddress2;
                m_ModelInput.Col119 = VirtualAddress3;
                m_ModelInput.Col120 = VirtualAddress4;
                m_ModelInput.Col121 = VirtualAddress5;
                m_ModelInput.Col122 = VirtualAddress6;
                m_ModelInput.Col123 = VirtualAddress7;
                m_ModelInput.Col124 = VirtualAddress8;
                m_ModelInput.Col125 = VirtualSize1;
                m_ModelInput.Col126 = VirtualSize2;
                m_ModelInput.Col127 = VirtualSize3;
                m_ModelInput.Col128 = VirtualSize4;
                m_ModelInput.Col129 = VirtualSize5;
                m_ModelInput.Col130 = VirtualSize6;
                m_ModelInput.Col131 = VirtualSize7;
                m_ModelInput.Col132 = VirtualSize8;

                bool Accept = false;
                bool AdjustTokenPrivileges = false;
                bool AttachThreadInput = false;
                bool Bind = false;
                bool BitBlt = false;
                bool CertOpenSystemStore = false;
                bool Connect = false;
                bool ConnectNamedPipe = false;
                bool ControlService = false;
                bool CreateFile = false;
                bool CreateFileMapping = false;
                bool CreateMutex = false;
                bool CreateProcess = false;
                bool CreateRemoteThread = false;
                bool CreateService = false;
                bool CreateToolhelp32Snapshot = false;
                bool CryptAcquireContext = false;
                bool DeviceIoControl = false;
                bool EnableExecuteProtectionSupport = false;
                bool EnumProcesses = false;
                bool EnumProcessModules = false;
                bool FindFirstFile = false;
                bool FindNextFile = false;
                bool FindResource = false;
                bool FindWindow = false;
                bool FtpPutFile = false;
                bool GetAdaptersInfo = false;
                bool GetAsyncKeyState = false;
                bool GetDC = false;
                bool GetForegroundWindow = false;
                bool Gethostbyname = false;
                bool Gethostname = false;
                bool GetKeyState = false;
                bool GetModuleFileName = false;
                bool GetModuleHandle = false;
                bool GetProcAddress = false;
                bool GetStartupInfo = false;
                bool GetSystemDefaultLangId = false;
                bool GetTempPath = false;
                bool GetThreadContext = false;
                bool GetVersionEx = false;
                bool GetWindowsDirectory = false;
                bool inet_addr = false;
                bool InternetOpen = false;
                bool InternetOpenUrl = false;
                bool InternetReadFile = false;
                bool InternetWriteFile = false;
                bool CreateFileA = false;
                bool CreateFileW = false;
                bool GetLastError = false;
                bool WriteFile = false;
                bool Sleep = false;
                bool CloseHandle = false;
                bool CompareStringA = false;
                bool CreateEventA = false;
                bool CreateThread = false;
                bool DeleteCriticalSection = false;
                bool EnterCriticalSection = false;
                bool EnumCalendarInfoA = false;
                bool ExitProcess = false;
                bool FindClose = false;
                bool FindFirstFileA = false;
                bool FindResourceA = false;
                bool FormatMessageA = false;
                bool FreeLibrary = false;
                bool FreeResource = false;
                bool GetACP = false;
                bool GetCommandLineA = false;
                bool GetCPInfo = false;
                bool GetCurrentProcessId = false;
                bool GetCurrentThreadId = false;
                bool GetDateFormatA = false;
                bool GetDiskFreeSpaceA = false;
                bool GetFullPathNameA = false;
                bool GetLocaleInfoA = false;
                bool GetLocalTime = false;
                bool GetModuleFileNameA = false;
                bool GetModuleHandleA = false;
                bool GetProfileStringA = false;
                bool GetStartupInfoA = false;
                bool GetStdHandle = false;
                bool GetStringTypeExA = false;
                bool GetSystemInfo = false;
                bool GetThreadLocale = false;
                bool GetTickCount = false;
                bool GetVersion = false;
                bool GetVersionExA = false;
                bool GlobalAddAtomA = false;
                bool GlobalAlloc = false;
                bool GlobalDeleteAtom = false;
                bool GlobalFindAtomA = false;
                bool GlobalFree = false;
                bool GlobalHandle = false;
                bool GlobalLock = false;
                bool GlobalReAlloc = false;
                bool GlobalSize = false;
                bool GlobalUnlock = false;
                bool InitializeCriticalSection = false;
                bool InterlockedDecrement = false;
                bool InterlockedExchange = false;
                bool InterlockedIncrement = false;
                bool LeaveCriticalSection = false;
                bool LoadLibraryA = false;
                bool LoadLibraryExA = false;
                bool LoadResource = false;
                bool LocalAlloc = false;
                bool LocalFree = false;
                bool LockResource = false;
                bool lstrcpyA = false;
                bool lstrcpynA = false;
                bool lstrlenA = false;
                bool MulDiv = false;
                bool MultiByteToWideChar = false;
                bool RaiseException = false;
                bool ReadFile = false;
                bool ResetEvent = false;
                bool RtlUnwind = false;
                bool SetEndOfFile = false;
                bool SetErrorMode = false;
                bool SetEvent = false;
                bool SetFilePointer = false;
                bool SetThreadLocale = false;
                bool SizeofResource = false;
                bool SleepEx = false;
                bool TlsGetValue = false;
                bool TlsSetValue = false;
                bool UnhandledExceptionFilter = false;
                bool VirtualAlloc = false;
                bool VirtualFree = false;
                bool VirtualQuery = false;
                bool WaitForSingleObject = false;
                bool WideCharToMultiByte = false;
                bool RegCloseKey = false;
                bool RegQueryValueExA = false;
                bool GetCurrentProcess = false;
                bool TerminateProcess = false;
                bool SetUnhandledExceptionFilter = false;
                bool QueryPerformanceCounter = false;
                bool IsDebuggerPresent = false;
                bool DisableThreadLibraryCalls = false;

                var strAPI = "";

                if (m_PeFile.ImportedFunctions != null)
                {
                    foreach (var importFunctions in m_PeFile.ImportedFunctions)
                    {
                        strAPI += $" {importFunctions.Name} ";
                    }
                }

                Accept = strAPI.ToLower().Contains("Accept".ToLower());
                AdjustTokenPrivileges = strAPI.ToLower().Contains("AdjustTokenPrivileges".ToLower());
                AttachThreadInput = strAPI.ToLower().Contains("AttachThreadInput".ToLower());
                Bind = strAPI.ToLower().Contains("Bind".ToLower());
                BitBlt = strAPI.ToLower().Contains("BitBlt".ToLower());
                CertOpenSystemStore = strAPI.ToLower().Contains("CertOpenSystemStore".ToLower());
                Connect = strAPI.ToLower().Contains("Connect".ToLower());
                ConnectNamedPipe = strAPI.ToLower().Contains("ConnectNamedPipe".ToLower());
                ControlService = strAPI.ToLower().Contains("ControlService".ToLower());
                CreateFile = strAPI.ToLower().Contains("CreateFile".ToLower());
                CreateFileMapping = strAPI.ToLower().Contains("CreateFileMapping".ToLower());
                CreateMutex = strAPI.ToLower().Contains("CreateMutex".ToLower());
                CreateProcess = strAPI.ToLower().Contains("CreateProcess".ToLower());
                CreateRemoteThread = strAPI.ToLower().Contains("CreateRemoteThread".ToLower());
                CreateService = strAPI.ToLower().Contains("CreateService".ToLower());
                CreateToolhelp32Snapshot = strAPI.ToLower().Contains("CreateToolhelp32Snapshot".ToLower());
                CryptAcquireContext = strAPI.ToLower().Contains("CryptAcquireContext".ToLower());
                DeviceIoControl = strAPI.ToLower().Contains("DeviceIoControl".ToLower());
                EnableExecuteProtectionSupport = strAPI.ToLower().Contains("EnableExecuteProtectionSupport".ToLower());
                EnumProcesses = strAPI.ToLower().Contains("EnumProcesses".ToLower());
                EnumProcessModules = strAPI.ToLower().Contains("EnumProcessModules".ToLower());
                FindFirstFile = strAPI.ToLower().Contains("FindFirstFile".ToLower());
                FindNextFile = strAPI.ToLower().Contains("FindNextFile".ToLower());
                FindResource = strAPI.ToLower().Contains("FindResource".ToLower());
                FindWindow = strAPI.ToLower().Contains("FindWindow".ToLower());
                FtpPutFile = strAPI.ToLower().Contains("FtpPutFile".ToLower());
                GetAdaptersInfo = strAPI.ToLower().Contains("GetAdaptersInfo".ToLower());
                GetAsyncKeyState = strAPI.ToLower().Contains("GetAsyncKeyState".ToLower());
                GetDC = strAPI.ToLower().Contains("GetDC".ToLower());
                GetForegroundWindow = strAPI.ToLower().Contains("GetForegroundWindow".ToLower());
                Gethostbyname = strAPI.ToLower().Contains("Gethostbyname".ToLower());
                Gethostname = strAPI.ToLower().Contains("Gethostname".ToLower());
                GetKeyState = strAPI.ToLower().Contains("GetKeyState".ToLower());
                GetModuleFileName = strAPI.ToLower().Contains("GetModuleFileName".ToLower());
                GetModuleHandle = strAPI.ToLower().Contains("GetModuleHandle".ToLower());
                GetProcAddress = strAPI.ToLower().Contains("GetProcAddress".ToLower());
                GetStartupInfo = strAPI.ToLower().Contains("GetStartupInfo".ToLower());
                GetSystemDefaultLangId = strAPI.ToLower().Contains("GetSystemDefaultLangId".ToLower());
                GetTempPath = strAPI.ToLower().Contains("GetTempPath".ToLower());
                GetThreadContext = strAPI.ToLower().Contains("GetThreadContext".ToLower());
                GetVersionEx = strAPI.ToLower().Contains("GetVersionEx".ToLower());
                GetWindowsDirectory = strAPI.ToLower().Contains("GetWindowsDirectory".ToLower());
                inet_addr = strAPI.ToLower().Contains("inet_addr".ToLower());
                InternetOpen = strAPI.ToLower().Contains("InternetOpen".ToLower());
                InternetOpenUrl = strAPI.ToLower().Contains("InternetOpenUrl".ToLower());
                InternetReadFile = strAPI.ToLower().Contains("InternetReadFile".ToLower());
                InternetWriteFile = strAPI.ToLower().Contains("InternetWriteFile".ToLower());
                CloseHandle = strAPI.ToLower().Contains("CloseHandle".ToLower());
                CompareStringA = strAPI.ToLower().Contains("CompareStringA".ToLower());
                CreateEventA = strAPI.ToLower().Contains("CreateEventA".ToLower());
                CreateFileA = strAPI.ToLower().Contains("CreateFileA".ToLower());
                CreateThread = strAPI.ToLower().Contains("CreateThread".ToLower());
                DeleteCriticalSection = strAPI.ToLower().Contains("DeleteCriticalSection".ToLower());
                EnterCriticalSection = strAPI.ToLower().Contains("EnterCriticalSection".ToLower());
                EnumCalendarInfoA = strAPI.ToLower().Contains("EnumCalendarInfoA".ToLower());
                ExitProcess = strAPI.ToLower().Contains("ExitProcess".ToLower());
                FindClose = strAPI.ToLower().Contains("FindClose".ToLower());
                FindFirstFileA = strAPI.ToLower().Contains("FindFirstFileA".ToLower());
                FindResourceA = strAPI.ToLower().Contains("FindResourceA".ToLower());
                FormatMessageA = strAPI.ToLower().Contains("FormatMessageA".ToLower());
                FreeLibrary = strAPI.ToLower().Contains("FreeLibrary".ToLower());
                FreeResource = strAPI.ToLower().Contains("FreeResource".ToLower());
                GetACP = strAPI.ToLower().Contains("GetACP".ToLower());
                GetCommandLineA = strAPI.ToLower().Contains("GetCommandLineA".ToLower());
                GetCPInfo = strAPI.ToLower().Contains("GetCPInfo".ToLower());
                GetCurrentProcessId = strAPI.ToLower().Contains("GetCurrentProcessId".ToLower());
                GetCurrentThreadId = strAPI.ToLower().Contains("GetCurrentThreadId".ToLower());
                GetDateFormatA = strAPI.ToLower().Contains("GetDateFormatA".ToLower());
                GetDiskFreeSpaceA = strAPI.ToLower().Contains("GetDiskFreeSpaceA".ToLower());
                GetFullPathNameA = strAPI.ToLower().Contains("GetFullPathNameA".ToLower());
                GetLastError = strAPI.ToLower().Contains("GetLastError".ToLower());
                GetLocaleInfoA = strAPI.ToLower().Contains("GetLocaleInfoA".ToLower());
                GetLocalTime = strAPI.ToLower().Contains("GetLocalTime".ToLower());
                GetModuleFileNameA = strAPI.ToLower().Contains("GetModuleFileNameA".ToLower());
                GetModuleHandleA = strAPI.ToLower().Contains("GetModuleHandleA".ToLower());
                GetProcAddress = strAPI.ToLower().Contains("GetProcAddress".ToLower());
                GetProfileStringA = strAPI.ToLower().Contains("GetProfileStringA".ToLower());
                GetStartupInfoA = strAPI.ToLower().Contains("GetStartupInfoA".ToLower());
                GetStdHandle = strAPI.ToLower().Contains("GetStdHandle".ToLower());
                GetStringTypeExA = strAPI.ToLower().Contains("GetStringTypeExA".ToLower());
                GetSystemInfo = strAPI.ToLower().Contains("GetSystemInfo".ToLower());
                GetThreadLocale = strAPI.ToLower().Contains("GetThreadLocale".ToLower());
                GetTickCount = strAPI.ToLower().Contains("GetTickCount".ToLower());
                GetVersion = strAPI.ToLower().Contains("GetVersion".ToLower());
                GetVersionExA = strAPI.ToLower().Contains("GetVersionExA".ToLower());
                GlobalAddAtomA = strAPI.ToLower().Contains("GlobalAddAtomA".ToLower());
                GlobalAlloc = strAPI.ToLower().Contains("GlobalAlloc".ToLower());
                GlobalDeleteAtom = strAPI.ToLower().Contains("GlobalDeleteAtom".ToLower());
                GlobalFindAtomA = strAPI.ToLower().Contains("GlobalFindAtomA".ToLower());
                GlobalFree = strAPI.ToLower().Contains("GlobalFree".ToLower());
                GlobalHandle = strAPI.ToLower().Contains("GlobalHandle".ToLower());
                GlobalLock = strAPI.ToLower().Contains("GlobalLock".ToLower());
                GlobalReAlloc = strAPI.ToLower().Contains("GlobalReAlloc".ToLower());
                GlobalSize = strAPI.ToLower().Contains("GlobalSize".ToLower());
                GlobalUnlock = strAPI.ToLower().Contains("GlobalUnlock".ToLower());
                InitializeCriticalSection = strAPI.ToLower().Contains("InitializeCriticalSection".ToLower());
                InterlockedDecrement = strAPI.ToLower().Contains("InterlockedDecrement".ToLower());
                InterlockedExchange = strAPI.ToLower().Contains("InterlockedExchange".ToLower());
                InterlockedIncrement = strAPI.ToLower().Contains("InterlockedIncrement".ToLower());
                LeaveCriticalSection = strAPI.ToLower().Contains("LeaveCriticalSection".ToLower());
                LoadLibraryA = strAPI.ToLower().Contains("LoadLibraryA".ToLower());
                LoadLibraryExA = strAPI.ToLower().Contains("LoadLibraryExA".ToLower());
                LoadResource = strAPI.ToLower().Contains("LoadResource".ToLower());
                LocalAlloc = strAPI.ToLower().Contains("LocalAlloc".ToLower());
                LocalFree = strAPI.ToLower().Contains("LocalFree".ToLower());
                LockResource = strAPI.ToLower().Contains("LockResource".ToLower());
                lstrcpyA = strAPI.ToLower().Contains("lstrcpyA".ToLower());
                lstrcpynA = strAPI.ToLower().Contains("lstrcpynA".ToLower());
                lstrlenA = strAPI.ToLower().Contains("lstrlenA".ToLower());
                MulDiv = strAPI.ToLower().Contains("MulDiv".ToLower());
                MultiByteToWideChar = strAPI.ToLower().Contains("MultiByteToWideChar".ToLower());
                RaiseException = strAPI.ToLower().Contains("RaiseException".ToLower());
                ReadFile = strAPI.ToLower().Contains("ReadFile".ToLower());
                ResetEvent = strAPI.ToLower().Contains("ResetEvent".ToLower());
                RtlUnwind = strAPI.ToLower().Contains("RtlUnwind".ToLower());
                SetEndOfFile = strAPI.ToLower().Contains("SetEndOfFile".ToLower());
                SetErrorMode = strAPI.ToLower().Contains("SetErrorMode".ToLower());
                SetEvent = strAPI.ToLower().Contains("SetEvent".ToLower());
                SetFilePointer = strAPI.ToLower().Contains("SetFilePointer".ToLower());
                SetThreadLocale = strAPI.ToLower().Contains("SetThreadLocale".ToLower());
                SizeofResource = strAPI.ToLower().Contains("SizeofResource".ToLower());
                Sleep = strAPI.ToLower().Contains("Sleep".ToLower());
                SleepEx = strAPI.ToLower().Contains("SleepEx".ToLower());
                TlsGetValue = strAPI.ToLower().Contains("TlsGetValue".ToLower());
                TlsSetValue = strAPI.ToLower().Contains("TlsSetValue".ToLower());
                UnhandledExceptionFilter = strAPI.ToLower().Contains("UnhandledExceptionFilter".ToLower());
                VirtualAlloc = strAPI.ToLower().Contains("VirtualAlloc".ToLower());
                VirtualFree = strAPI.ToLower().Contains("VirtualFree".ToLower());
                VirtualQuery = strAPI.ToLower().Contains("VirtualQuery".ToLower());
                WaitForSingleObject = strAPI.ToLower().Contains("WaitForSingleObject".ToLower());
                WideCharToMultiByte = strAPI.ToLower().Contains("WideCharToMultiByte".ToLower());
                WriteFile = strAPI.ToLower().Contains("WriteFile".ToLower());
                RegCloseKey = strAPI.ToLower().Contains("RegCloseKey".ToLower());
                RegQueryValueExA = strAPI.ToLower().Contains("RegQueryValueExA".ToLower());
                GetCurrentProcess = strAPI.ToLower().Contains("GetCurrentProcess".ToLower());
                TerminateProcess = strAPI.ToLower().Contains("TerminateProcess".ToLower());
                SetUnhandledExceptionFilter = strAPI.ToLower().Contains("SetUnhandledExceptionFilter".ToLower());
                QueryPerformanceCounter = strAPI.ToLower().Contains("QueryPerformanceCounter".ToLower());
                IsDebuggerPresent = strAPI.ToLower().Contains("IsDebuggerPresent".ToLower());
                CreateFileW = strAPI.ToLower().Contains("CreateFileW".ToLower());
                DisableThreadLibraryCalls = strAPI.ToLower().Contains("DisableThreadLibraryCalls".ToLower());

                m_ModelInput.Col133 = m_ApkParser.CheckSum;
                m_ModelInput.Col134 = m_ApkParser.FileSize;
                m_ModelInput.Col135 = m_ApkParser.SA1;
                m_ModelInput.Col136 = m_ApkParser.HeaderSize;
                m_ModelInput.Col137 = m_ApkParser.EndianTag;
                m_ModelInput.Col138 = m_ApkParser.LinkSize;
                m_ModelInput.Col139 = m_ApkParser.LinkOff;
                m_ModelInput.Col140 = m_ApkParser.MapOff;
                m_ModelInput.Col141 = m_ApkParser.sIdsOff;
                m_ModelInput.Col142 = m_ApkParser.sIdsSize;
                m_ModelInput.Col143 = m_ApkParser.tIdsSize;
                m_ModelInput.Col144 = m_ApkParser.tIdsOff;
                m_ModelInput.Col145 = m_ApkParser.pIdsSize;
                m_ModelInput.Col146 = m_ApkParser.pIdsOff;
                m_ModelInput.Col147 = m_ApkParser.fIdsSize;
                m_ModelInput.Col148 = m_ApkParser.fIdsOff;
                m_ModelInput.Col149 = m_ApkParser.mIdsSize;
                m_ModelInput.Col150 = m_ApkParser.mIdsOff;
                m_ModelInput.Col151 = m_ApkParser.cDefSize;
                m_ModelInput.Col152 = m_ApkParser.cDefOff;
                m_ModelInput.Col153 = m_ApkParser.DataSize;
                m_ModelInput.Col154 = m_ApkParser.DataOff;
                m_ModelInput.Col155 = m_ApkParser.Entropy;
                m_ModelInput.Col156 = (float)GetShannonEntropy(File.ReadAllText(FilePath));
                m_ModelInput.Col157 = (float)GetEntropy(File.ReadAllBytes(FilePath));
                m_ModelInput.Col158 = BooleanToNumber(m_PeFile.HasValidComDescriptor);
                m_ModelInput.Col159 = BooleanToNumber(m_PeFile.HasValidExceptionDir);
                m_ModelInput.Col160 = BooleanToNumber(m_PeFile.HasValidExportDir);
                m_ModelInput.Col161 = BooleanToNumber(m_PeFile.HasValidImportDir);
                m_ModelInput.Col162 = BooleanToNumber(m_PeFile.HasValidRelocDir);
                m_ModelInput.Col163 = BooleanToNumber(m_PeFile.HasValidResourceDir);
                m_ModelInput.Col164 = BooleanToNumber(m_PeFile.HasValidSecurityDir);
                m_ModelInput.Col165 = BooleanToNumber(m_PeFile.Is32Bit);
                m_ModelInput.Col166 = BooleanToNumber(m_PeFile.Is64Bit);
                m_ModelInput.Col167 = BooleanToNumber(m_PeFile.IsDLL);
                m_ModelInput.Col168 = BooleanToNumber(m_PeFile.IsEXE);
                m_ModelInput.Col169 = BooleanToNumber(m_PeFile.IsSigned);
                m_ModelInput.Col170 = BooleanToNumber(m_PeFile.IsValidPeFile);
                m_ModelInput.Col171 = BooleanToNumber(Accept);
                m_ModelInput.Col172 = BooleanToNumber(AdjustTokenPrivileges);
                m_ModelInput.Col173 = BooleanToNumber(AttachThreadInput);
                m_ModelInput.Col174 = BooleanToNumber(Bind);
                m_ModelInput.Col175 = BooleanToNumber(BitBlt);
                m_ModelInput.Col176 = BooleanToNumber(CertOpenSystemStore);
                m_ModelInput.Col177 = BooleanToNumber(Connect);
                m_ModelInput.Col178 = BooleanToNumber(ConnectNamedPipe);
                m_ModelInput.Col179 = BooleanToNumber(ControlService);
                m_ModelInput.Col180 = BooleanToNumber(CreateFile);
                m_ModelInput.Col181 = BooleanToNumber(CreateFileMapping);
                m_ModelInput.Col182 = BooleanToNumber(CreateMutex);
                m_ModelInput.Col183 = BooleanToNumber(CreateProcess);
                m_ModelInput.Col184 = BooleanToNumber(CreateRemoteThread);
                m_ModelInput.Col185 = BooleanToNumber(CreateService);
                m_ModelInput.Col186 = BooleanToNumber(CreateToolhelp32Snapshot);
                m_ModelInput.Col187 = BooleanToNumber(CryptAcquireContext);
                m_ModelInput.Col188 = BooleanToNumber(DeviceIoControl);
                m_ModelInput.Col189 = BooleanToNumber(EnableExecuteProtectionSupport);
                m_ModelInput.Col190 = BooleanToNumber(EnumProcesses);
                m_ModelInput.Col191 = BooleanToNumber(EnumProcessModules);
                m_ModelInput.Col192 = BooleanToNumber(FindFirstFile);
                m_ModelInput.Col193 = BooleanToNumber(FindNextFile);
                m_ModelInput.Col194 = BooleanToNumber(FindResource);
                m_ModelInput.Col195 = BooleanToNumber(FindWindow);
                m_ModelInput.Col196 = BooleanToNumber(FtpPutFile);
                m_ModelInput.Col197 = BooleanToNumber(GetAdaptersInfo);
                m_ModelInput.Col198 = BooleanToNumber(GetAsyncKeyState);
                m_ModelInput.Col199 = BooleanToNumber(GetDC);
                m_ModelInput.Col200 = BooleanToNumber(GetForegroundWindow);
                m_ModelInput.Col201 = BooleanToNumber(Gethostbyname);
                m_ModelInput.Col202 = BooleanToNumber(Gethostname);
                m_ModelInput.Col203 = BooleanToNumber(GetKeyState);
                m_ModelInput.Col204 = BooleanToNumber(GetModuleFileName);
                m_ModelInput.Col205 = BooleanToNumber(GetModuleHandle);
                m_ModelInput.Col206 = BooleanToNumber(GetProcAddress);
                m_ModelInput.Col207 = BooleanToNumber(GetStartupInfo);
                m_ModelInput.Col208 = BooleanToNumber(GetSystemDefaultLangId);
                m_ModelInput.Col209 = BooleanToNumber(GetTempPath);
                m_ModelInput.Col210 = BooleanToNumber(GetThreadContext);
                m_ModelInput.Col211 = BooleanToNumber(GetVersionEx);
                m_ModelInput.Col212 = BooleanToNumber(GetWindowsDirectory);
                m_ModelInput.Col213 = BooleanToNumber(inet_addr);
                m_ModelInput.Col214 = BooleanToNumber(InternetOpen);
                m_ModelInput.Col215 = BooleanToNumber(InternetOpenUrl);
                m_ModelInput.Col216 = BooleanToNumber(InternetReadFile);
                m_ModelInput.Col217 = BooleanToNumber(InternetWriteFile);
                m_ModelInput.Col218 = BooleanToNumber(CreateFileA);
                m_ModelInput.Col219 = BooleanToNumber(CreateFileW);
                m_ModelInput.Col220 = BooleanToNumber(GetLastError);
                m_ModelInput.Col221 = BooleanToNumber(WriteFile);
                m_ModelInput.Col222 = BooleanToNumber(Sleep);
                m_ModelInput.Col223 = BooleanToNumber(CloseHandle);
                m_ModelInput.Col224 = BooleanToNumber(CompareStringA);
                m_ModelInput.Col225 = BooleanToNumber(CreateEventA);
                m_ModelInput.Col226 = BooleanToNumber(CreateThread);
                m_ModelInput.Col227 = BooleanToNumber(DeleteCriticalSection);
                m_ModelInput.Col228 = BooleanToNumber(EnterCriticalSection);
                m_ModelInput.Col229 = BooleanToNumber(EnumCalendarInfoA);
                m_ModelInput.Col230 = BooleanToNumber(ExitProcess);
                m_ModelInput.Col231 = BooleanToNumber(FindClose);
                m_ModelInput.Col232 = BooleanToNumber(FindFirstFileA);
                m_ModelInput.Col233 = BooleanToNumber(FindResourceA);
                m_ModelInput.Col234 = BooleanToNumber(FormatMessageA);
                m_ModelInput.Col235 = BooleanToNumber(FreeLibrary);
                m_ModelInput.Col236 = BooleanToNumber(FreeResource);
                m_ModelInput.Col237 = BooleanToNumber(GetACP);
                m_ModelInput.Col238 = BooleanToNumber(GetCommandLineA);
                m_ModelInput.Col239 = BooleanToNumber(GetCPInfo);
                m_ModelInput.Col240 = BooleanToNumber(GetCurrentProcessId);
                m_ModelInput.Col241 = BooleanToNumber(GetCurrentThreadId);
                m_ModelInput.Col242 = BooleanToNumber(GetDateFormatA);
                m_ModelInput.Col243 = BooleanToNumber(GetDiskFreeSpaceA);
                m_ModelInput.Col244 = BooleanToNumber(GetFullPathNameA);
                m_ModelInput.Col245 = BooleanToNumber(GetLocaleInfoA);
                m_ModelInput.Col246 = BooleanToNumber(GetLocalTime);
                m_ModelInput.Col247 = BooleanToNumber(GetModuleFileNameA);
                m_ModelInput.Col248 = BooleanToNumber(GetModuleHandleA);
                m_ModelInput.Col249 = BooleanToNumber(GetProfileStringA);
                m_ModelInput.Col250 = BooleanToNumber(GetStartupInfoA);
                m_ModelInput.Col251 = BooleanToNumber(GetStdHandle);
                m_ModelInput.Col252 = BooleanToNumber(GetStringTypeExA);
                m_ModelInput.Col253 = BooleanToNumber(GetSystemInfo);
                m_ModelInput.Col254 = BooleanToNumber(GetThreadLocale);
                m_ModelInput.Col255 = BooleanToNumber(GetTickCount);
                m_ModelInput.Col256 = BooleanToNumber(GetVersion);
                m_ModelInput.Col257 = BooleanToNumber(GetVersionExA);
                m_ModelInput.Col258 = BooleanToNumber(GlobalAddAtomA);
                m_ModelInput.Col259 = BooleanToNumber(GlobalAlloc);
                m_ModelInput.Col260 = BooleanToNumber(GlobalDeleteAtom);
                m_ModelInput.Col261 = BooleanToNumber(GlobalFindAtomA);
                m_ModelInput.Col262 = BooleanToNumber(GlobalFree);
                m_ModelInput.Col263 = BooleanToNumber(GlobalHandle);
                m_ModelInput.Col264 = BooleanToNumber(GlobalLock);
                m_ModelInput.Col265 = BooleanToNumber(GlobalReAlloc);
                m_ModelInput.Col266 = BooleanToNumber(GlobalSize);
                m_ModelInput.Col267 = BooleanToNumber(GlobalUnlock);
                m_ModelInput.Col268 = BooleanToNumber(InitializeCriticalSection);
                m_ModelInput.Col269 = BooleanToNumber(InterlockedDecrement);
                m_ModelInput.Col270 = BooleanToNumber(InterlockedExchange);
                m_ModelInput.Col271 = BooleanToNumber(InterlockedIncrement);
                m_ModelInput.Col272 = BooleanToNumber(LeaveCriticalSection);
                m_ModelInput.Col273 = BooleanToNumber(LoadLibraryA);
                m_ModelInput.Col274 = BooleanToNumber(LoadLibraryExA);
                m_ModelInput.Col275 = BooleanToNumber(LoadResource);
                m_ModelInput.Col276 = BooleanToNumber(LocalAlloc);
                m_ModelInput.Col277 = BooleanToNumber(LocalFree);
                m_ModelInput.Col278 = BooleanToNumber(LockResource);
                m_ModelInput.Col279 = BooleanToNumber(lstrcpyA);
                m_ModelInput.Col280 = BooleanToNumber(lstrcpynA);
                m_ModelInput.Col281 = BooleanToNumber(lstrlenA);
                m_ModelInput.Col282 = BooleanToNumber(MulDiv);
                m_ModelInput.Col283 = BooleanToNumber(MultiByteToWideChar);
                m_ModelInput.Col284 = BooleanToNumber(RaiseException);
                m_ModelInput.Col285 = BooleanToNumber(ReadFile);
                m_ModelInput.Col286 = BooleanToNumber(ResetEvent);
                m_ModelInput.Col287 = BooleanToNumber(RtlUnwind);
                m_ModelInput.Col288 = BooleanToNumber(SetEndOfFile);
                m_ModelInput.Col289 = BooleanToNumber(SetErrorMode);
                m_ModelInput.Col290 = BooleanToNumber(SetEvent);
                m_ModelInput.Col291 = BooleanToNumber(SetFilePointer);
                m_ModelInput.Col292 = BooleanToNumber(SetThreadLocale);
                m_ModelInput.Col293 = BooleanToNumber(SizeofResource);
                m_ModelInput.Col294 = BooleanToNumber(SleepEx);
                m_ModelInput.Col295 = BooleanToNumber(TlsGetValue);
                m_ModelInput.Col296 = BooleanToNumber(TlsSetValue);
                m_ModelInput.Col297 = BooleanToNumber(UnhandledExceptionFilter);
                m_ModelInput.Col298 = BooleanToNumber(VirtualAlloc);
                m_ModelInput.Col299 = BooleanToNumber(VirtualFree);
                m_ModelInput.Col300 = BooleanToNumber(VirtualQuery);
                m_ModelInput.Col301 = BooleanToNumber(WaitForSingleObject);
                m_ModelInput.Col302 = BooleanToNumber(WideCharToMultiByte);
                m_ModelInput.Col303 = BooleanToNumber(RegCloseKey);
                m_ModelInput.Col304 = BooleanToNumber(RegQueryValueExA);
                m_ModelInput.Col305 = BooleanToNumber(GetCurrentProcess);
                m_ModelInput.Col306 = BooleanToNumber(TerminateProcess);
                m_ModelInput.Col307 = BooleanToNumber(SetUnhandledExceptionFilter);
                m_ModelInput.Col308 = BooleanToNumber(QueryPerformanceCounter);
                m_ModelInput.Col309 = BooleanToNumber(IsDebuggerPresent);
                m_ModelInput.Col310 = BooleanToNumber(DisableThreadLibraryCalls);


                ModelOutput m_ModelOutput = StaticDetectorModel.Predict(m_ModelInput);

                if (m_ModelOutput.Score > 0.8)
                {
                    FilterLevel += 50;
                    filterModel.AddTag($"Malicious_ML_Score={m_ModelOutput.Score.ToString()}%");

                }


                var m_AVScanResult = m_AVEngine.ScanFile(FilePath);
                var m_VirusName = m_AVEngine.VirusName;

                if (m_AVScanResult == KavKernel.ScanResult.Infected)
                {
                    FilterLevel += 50;
                    filterModel.AddTag($"AntiVirus");
                }

            }
            catch (Exception)
            {

            }

           



            if (FilterLevel > 50)
            {
                filterResult = FilterResult.Block;
            }
            else if (FilterLevel > 40)
            {
                filterResult = FilterResult.Suspect;
            }
            else if (FilterLevel < 30)
            {
                filterResult = FilterResult.Allow;
            }

            filterModel.FilterResult = filterResult;

            return FilterLevel;
        }

        private string GetMd5HashBuffer(byte[] buffer)
        {
            string Result = "";

            if (buffer != null)
            {
                using (MD5 Md5 = MD5.Create())
                {
                    byte[] BufferData = Md5.ComputeHash(buffer);

                    StringBuilder Builder = new StringBuilder();

                    for (int i = 0; i < BufferData.Length; i++)
                    {
                        Builder.Append(BufferData[i].ToString("x2"));
                    }

                    Result = Builder.ToString();
                }
            }
            return Result;
        }

        private float GetEntropy(byte[] c)
        {
            int[] numArray = new int[0x100];
            byte[] buffer = c;
            for (int i = 0; i < 0x100; i++)
            {
                numArray[i] = 0;
            }

            for (int j = 0; j < (buffer.Length - 1); j++)
            {
                int index = buffer[j];
                numArray[index]++;
            }
            int length = buffer.Length;
            float entropy = 0f;
            for (int k = 0; k < 0x100; k++)
            {
                if ((numArray[k] != 0) && (k != 0))
                {
                    entropy += (-float.Parse(numArray[k].ToString()) / float.Parse(length.ToString())) * float.Parse(Math.Log((double)(float.Parse(numArray[k].ToString()) / float.Parse(length.ToString())), 2.0).ToString());
                }
            }

            return entropy;
        }

        private double GetShannonEntropy(string s)
        {
            var map = new Dictionary<char, int>();
            foreach (char c in s)
            {
                if (!map.ContainsKey(c))
                    map.Add(c, 1);
                else
                    map[c] += 1;
            }

            double result = 0.0;
            int len = s.Length;
            foreach (var item in map)
            {
                var frequency = (double)item.Value / len;
                result -= frequency * (Math.Log(frequency) / Math.Log(2));
            }

            return result;
        }

        private int BooleanToNumber(bool value)
        {
            if (value)
                return 1;
            return 0;
        }
    }

    public partial class StaticDetectorModel
    {
        /// <summary>
        /// model input class for StaticDetector.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(0)]
            [ColumnName(@"col0")]
            public string Col0 { get; set; }

            [LoadColumn(1)]
            [ColumnName(@"col1")]
            public float Col1 { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"col2")]
            public float Col2 { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"col3")]
            public float Col3 { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"col4")]
            public float Col4 { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"col5")]
            public float Col5 { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"col6")]
            public float Col6 { get; set; }

            [LoadColumn(7)]
            [ColumnName(@"col7")]
            public float Col7 { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"col8")]
            public float Col8 { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"col9")]
            public float Col9 { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"col10")]
            public float Col10 { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"col11")]
            public float Col11 { get; set; }

            [LoadColumn(12)]
            [ColumnName(@"col12")]
            public float Col12 { get; set; }

            [LoadColumn(13)]
            [ColumnName(@"col13")]
            public float Col13 { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"col14")]
            public float Col14 { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"col15")]
            public float Col15 { get; set; }

            [LoadColumn(16)]
            [ColumnName(@"col16")]
            public float Col16 { get; set; }

            [LoadColumn(17)]
            [ColumnName(@"col17")]
            public float Col17 { get; set; }

            [LoadColumn(18)]
            [ColumnName(@"col18")]
            public float Col18 { get; set; }

            [LoadColumn(19)]
            [ColumnName(@"col19")]
            public float Col19 { get; set; }

            [LoadColumn(20)]
            [ColumnName(@"col20")]
            public float Col20 { get; set; }

            [LoadColumn(21)]
            [ColumnName(@"col21")]
            public float Col21 { get; set; }

            [LoadColumn(22)]
            [ColumnName(@"col22")]
            public float Col22 { get; set; }

            [LoadColumn(23)]
            [ColumnName(@"col23")]
            public float Col23 { get; set; }

            [LoadColumn(24)]
            [ColumnName(@"col24")]
            public float Col24 { get; set; }

            [LoadColumn(25)]
            [ColumnName(@"col25")]
            public float Col25 { get; set; }

            [LoadColumn(26)]
            [ColumnName(@"col26")]
            public float Col26 { get; set; }

            [LoadColumn(27)]
            [ColumnName(@"col27")]
            public float Col27 { get; set; }

            [LoadColumn(28)]
            [ColumnName(@"col28")]
            public float Col28 { get; set; }

            [LoadColumn(29)]
            [ColumnName(@"col29")]
            public float Col29 { get; set; }

            [LoadColumn(30)]
            [ColumnName(@"col30")]
            public float Col30 { get; set; }

            [LoadColumn(31)]
            [ColumnName(@"col31")]
            public float Col31 { get; set; }

            [LoadColumn(32)]
            [ColumnName(@"col32")]
            public float Col32 { get; set; }

            [LoadColumn(33)]
            [ColumnName(@"col33")]
            public float Col33 { get; set; }

            [LoadColumn(34)]
            [ColumnName(@"col34")]
            public float Col34 { get; set; }

            [LoadColumn(35)]
            [ColumnName(@"col35")]
            public float Col35 { get; set; }

            [LoadColumn(36)]
            [ColumnName(@"col36")]
            public float Col36 { get; set; }

            [LoadColumn(37)]
            [ColumnName(@"col37")]
            public float Col37 { get; set; }

            [LoadColumn(38)]
            [ColumnName(@"col38")]
            public float Col38 { get; set; }

            [LoadColumn(39)]
            [ColumnName(@"col39")]
            public float Col39 { get; set; }

            [LoadColumn(40)]
            [ColumnName(@"col40")]
            public float Col40 { get; set; }

            [LoadColumn(41)]
            [ColumnName(@"col41")]
            public float Col41 { get; set; }

            [LoadColumn(42)]
            [ColumnName(@"col42")]
            public float Col42 { get; set; }

            [LoadColumn(43)]
            [ColumnName(@"col43")]
            public float Col43 { get; set; }

            [LoadColumn(44)]
            [ColumnName(@"col44")]
            public float Col44 { get; set; }

            [LoadColumn(45)]
            [ColumnName(@"col45")]
            public float Col45 { get; set; }

            [LoadColumn(46)]
            [ColumnName(@"col46")]
            public float Col46 { get; set; }

            [LoadColumn(47)]
            [ColumnName(@"col47")]
            public float Col47 { get; set; }

            [LoadColumn(48)]
            [ColumnName(@"col48")]
            public float Col48 { get; set; }

            [LoadColumn(49)]
            [ColumnName(@"col49")]
            public float Col49 { get; set; }

            [LoadColumn(50)]
            [ColumnName(@"col50")]
            public float Col50 { get; set; }

            [LoadColumn(51)]
            [ColumnName(@"col51")]
            public float Col51 { get; set; }

            [LoadColumn(52)]
            [ColumnName(@"col52")]
            public float Col52 { get; set; }

            [LoadColumn(53)]
            [ColumnName(@"col53")]
            public float Col53 { get; set; }

            [LoadColumn(54)]
            [ColumnName(@"col54")]
            public float Col54 { get; set; }

            [LoadColumn(55)]
            [ColumnName(@"col55")]
            public float Col55 { get; set; }

            [LoadColumn(56)]
            [ColumnName(@"col56")]
            public float Col56 { get; set; }

            [LoadColumn(57)]
            [ColumnName(@"col57")]
            public float Col57 { get; set; }

            [LoadColumn(58)]
            [ColumnName(@"col58")]
            public float Col58 { get; set; }

            [LoadColumn(59)]
            [ColumnName(@"col59")]
            public float Col59 { get; set; }

            [LoadColumn(60)]
            [ColumnName(@"col60")]
            public float Col60 { get; set; }

            [LoadColumn(61)]
            [ColumnName(@"col61")]
            public float Col61 { get; set; }

            [LoadColumn(62)]
            [ColumnName(@"col62")]
            public float Col62 { get; set; }

            [LoadColumn(63)]
            [ColumnName(@"col63")]
            public float Col63 { get; set; }

            [LoadColumn(64)]
            [ColumnName(@"col64")]
            public float Col64 { get; set; }

            [LoadColumn(65)]
            [ColumnName(@"col65")]
            public float Col65 { get; set; }

            [LoadColumn(66)]
            [ColumnName(@"col66")]
            public float Col66 { get; set; }

            [LoadColumn(67)]
            [ColumnName(@"col67")]
            public float Col67 { get; set; }

            [LoadColumn(68)]
            [ColumnName(@"col68")]
            public float Col68 { get; set; }

            [LoadColumn(69)]
            [ColumnName(@"col69")]
            public float Col69 { get; set; }

            [LoadColumn(70)]
            [ColumnName(@"col70")]
            public float Col70 { get; set; }

            [LoadColumn(71)]
            [ColumnName(@"col71")]
            public float Col71 { get; set; }

            [LoadColumn(72)]
            [ColumnName(@"col72")]
            public float Col72 { get; set; }

            [LoadColumn(73)]
            [ColumnName(@"col73")]
            public float Col73 { get; set; }

            [LoadColumn(74)]
            [ColumnName(@"col74")]
            public float Col74 { get; set; }

            [LoadColumn(75)]
            [ColumnName(@"col75")]
            public float Col75 { get; set; }

            [LoadColumn(76)]
            [ColumnName(@"col76")]
            public float Col76 { get; set; }

            [LoadColumn(77)]
            [ColumnName(@"col77")]
            public float Col77 { get; set; }

            [LoadColumn(78)]
            [ColumnName(@"col78")]
            public float Col78 { get; set; }

            [LoadColumn(79)]
            [ColumnName(@"col79")]
            public float Col79 { get; set; }

            [LoadColumn(80)]
            [ColumnName(@"col80")]
            public float Col80 { get; set; }

            [LoadColumn(81)]
            [ColumnName(@"col81")]
            public float Col81 { get; set; }

            [LoadColumn(82)]
            [ColumnName(@"col82")]
            public float Col82 { get; set; }

            [LoadColumn(83)]
            [ColumnName(@"col83")]
            public float Col83 { get; set; }

            [LoadColumn(84)]
            [ColumnName(@"col84")]
            public float Col84 { get; set; }

            [LoadColumn(85)]
            [ColumnName(@"col85")]
            public float Col85 { get; set; }

            [LoadColumn(86)]
            [ColumnName(@"col86")]
            public float Col86 { get; set; }

            [LoadColumn(87)]
            [ColumnName(@"col87")]
            public float Col87 { get; set; }

            [LoadColumn(88)]
            [ColumnName(@"col88")]
            public float Col88 { get; set; }

            [LoadColumn(89)]
            [ColumnName(@"col89")]
            public float Col89 { get; set; }

            [LoadColumn(90)]
            [ColumnName(@"col90")]
            public float Col90 { get; set; }

            [LoadColumn(91)]
            [ColumnName(@"col91")]
            public float Col91 { get; set; }

            [LoadColumn(92)]
            [ColumnName(@"col92")]
            public float Col92 { get; set; }

            [LoadColumn(93)]
            [ColumnName(@"col93")]
            public float Col93 { get; set; }

            [LoadColumn(94)]
            [ColumnName(@"col94")]
            public float Col94 { get; set; }

            [LoadColumn(95)]
            [ColumnName(@"col95")]
            public float Col95 { get; set; }

            [LoadColumn(96)]
            [ColumnName(@"col96")]
            public float Col96 { get; set; }

            [LoadColumn(97)]
            [ColumnName(@"col97")]
            public float Col97 { get; set; }

            [LoadColumn(98)]
            [ColumnName(@"col98")]
            public float Col98 { get; set; }

            [LoadColumn(99)]
            [ColumnName(@"col99")]
            public float Col99 { get; set; }

            [LoadColumn(100)]
            [ColumnName(@"col100")]
            public float Col100 { get; set; }

            [LoadColumn(101)]
            [ColumnName(@"col101")]
            public float Col101 { get; set; }

            [LoadColumn(102)]
            [ColumnName(@"col102")]
            public float Col102 { get; set; }

            [LoadColumn(103)]
            [ColumnName(@"col103")]
            public float Col103 { get; set; }

            [LoadColumn(104)]
            [ColumnName(@"col104")]
            public float Col104 { get; set; }

            [LoadColumn(105)]
            [ColumnName(@"col105")]
            public float Col105 { get; set; }

            [LoadColumn(106)]
            [ColumnName(@"col106")]
            public float Col106 { get; set; }

            [LoadColumn(107)]
            [ColumnName(@"col107")]
            public float Col107 { get; set; }

            [LoadColumn(108)]
            [ColumnName(@"col108")]
            public float Col108 { get; set; }

            [LoadColumn(109)]
            [ColumnName(@"col109")]
            public float Col109 { get; set; }

            [LoadColumn(110)]
            [ColumnName(@"col110")]
            public float Col110 { get; set; }

            [LoadColumn(111)]
            [ColumnName(@"col111")]
            public float Col111 { get; set; }

            [LoadColumn(112)]
            [ColumnName(@"col112")]
            public float Col112 { get; set; }

            [LoadColumn(113)]
            [ColumnName(@"col113")]
            public float Col113 { get; set; }

            [LoadColumn(114)]
            [ColumnName(@"col114")]
            public float Col114 { get; set; }

            [LoadColumn(115)]
            [ColumnName(@"col115")]
            public float Col115 { get; set; }

            [LoadColumn(116)]
            [ColumnName(@"col116")]
            public float Col116 { get; set; }

            [LoadColumn(117)]
            [ColumnName(@"col117")]
            public float Col117 { get; set; }

            [LoadColumn(118)]
            [ColumnName(@"col118")]
            public float Col118 { get; set; }

            [LoadColumn(119)]
            [ColumnName(@"col119")]
            public float Col119 { get; set; }

            [LoadColumn(120)]
            [ColumnName(@"col120")]
            public float Col120 { get; set; }

            [LoadColumn(121)]
            [ColumnName(@"col121")]
            public float Col121 { get; set; }

            [LoadColumn(122)]
            [ColumnName(@"col122")]
            public float Col122 { get; set; }

            [LoadColumn(123)]
            [ColumnName(@"col123")]
            public float Col123 { get; set; }

            [LoadColumn(124)]
            [ColumnName(@"col124")]
            public float Col124 { get; set; }

            [LoadColumn(125)]
            [ColumnName(@"col125")]
            public float Col125 { get; set; }

            [LoadColumn(126)]
            [ColumnName(@"col126")]
            public float Col126 { get; set; }

            [LoadColumn(127)]
            [ColumnName(@"col127")]
            public float Col127 { get; set; }

            [LoadColumn(128)]
            [ColumnName(@"col128")]
            public float Col128 { get; set; }

            [LoadColumn(129)]
            [ColumnName(@"col129")]
            public float Col129 { get; set; }

            [LoadColumn(130)]
            [ColumnName(@"col130")]
            public float Col130 { get; set; }

            [LoadColumn(131)]
            [ColumnName(@"col131")]
            public float Col131 { get; set; }

            [LoadColumn(132)]
            [ColumnName(@"col132")]
            public float Col132 { get; set; }

            [LoadColumn(133)]
            [ColumnName(@"col133")]
            public float Col133 { get; set; }

            [LoadColumn(134)]
            [ColumnName(@"col134")]
            public float Col134 { get; set; }

            [LoadColumn(135)]
            [ColumnName(@"col135")]
            public float Col135 { get; set; }

            [LoadColumn(136)]
            [ColumnName(@"col136")]
            public float Col136 { get; set; }

            [LoadColumn(137)]
            [ColumnName(@"col137")]
            public float Col137 { get; set; }

            [LoadColumn(138)]
            [ColumnName(@"col138")]
            public float Col138 { get; set; }

            [LoadColumn(139)]
            [ColumnName(@"col139")]
            public float Col139 { get; set; }

            [LoadColumn(140)]
            [ColumnName(@"col140")]
            public float Col140 { get; set; }

            [LoadColumn(141)]
            [ColumnName(@"col141")]
            public float Col141 { get; set; }

            [LoadColumn(142)]
            [ColumnName(@"col142")]
            public float Col142 { get; set; }

            [LoadColumn(143)]
            [ColumnName(@"col143")]
            public float Col143 { get; set; }

            [LoadColumn(144)]
            [ColumnName(@"col144")]
            public float Col144 { get; set; }

            [LoadColumn(145)]
            [ColumnName(@"col145")]
            public float Col145 { get; set; }

            [LoadColumn(146)]
            [ColumnName(@"col146")]
            public float Col146 { get; set; }

            [LoadColumn(147)]
            [ColumnName(@"col147")]
            public float Col147 { get; set; }

            [LoadColumn(148)]
            [ColumnName(@"col148")]
            public float Col148 { get; set; }

            [LoadColumn(149)]
            [ColumnName(@"col149")]
            public float Col149 { get; set; }

            [LoadColumn(150)]
            [ColumnName(@"col150")]
            public float Col150 { get; set; }

            [LoadColumn(151)]
            [ColumnName(@"col151")]
            public float Col151 { get; set; }

            [LoadColumn(152)]
            [ColumnName(@"col152")]
            public float Col152 { get; set; }

            [LoadColumn(153)]
            [ColumnName(@"col153")]
            public float Col153 { get; set; }

            [LoadColumn(154)]
            [ColumnName(@"col154")]
            public float Col154 { get; set; }

            [LoadColumn(155)]
            [ColumnName(@"col155")]
            public float Col155 { get; set; }

            [LoadColumn(156)]
            [ColumnName(@"col156")]
            public float Col156 { get; set; }

            [LoadColumn(157)]
            [ColumnName(@"col157")]
            public float Col157 { get; set; }

            [LoadColumn(158)]
            [ColumnName(@"col158")]
            public float Col158 { get; set; }

            [LoadColumn(159)]
            [ColumnName(@"col159")]
            public float Col159 { get; set; }

            [LoadColumn(160)]
            [ColumnName(@"col160")]
            public float Col160 { get; set; }

            [LoadColumn(161)]
            [ColumnName(@"col161")]
            public float Col161 { get; set; }

            [LoadColumn(162)]
            [ColumnName(@"col162")]
            public float Col162 { get; set; }

            [LoadColumn(163)]
            [ColumnName(@"col163")]
            public float Col163 { get; set; }

            [LoadColumn(164)]
            [ColumnName(@"col164")]
            public float Col164 { get; set; }

            [LoadColumn(165)]
            [ColumnName(@"col165")]
            public float Col165 { get; set; }

            [LoadColumn(166)]
            [ColumnName(@"col166")]
            public float Col166 { get; set; }

            [LoadColumn(167)]
            [ColumnName(@"col167")]
            public float Col167 { get; set; }

            [LoadColumn(168)]
            [ColumnName(@"col168")]
            public float Col168 { get; set; }

            [LoadColumn(169)]
            [ColumnName(@"col169")]
            public float Col169 { get; set; }

            [LoadColumn(170)]
            [ColumnName(@"col170")]
            public float Col170 { get; set; }

            [LoadColumn(171)]
            [ColumnName(@"col171")]
            public float Col171 { get; set; }

            [LoadColumn(172)]
            [ColumnName(@"col172")]
            public float Col172 { get; set; }

            [LoadColumn(173)]
            [ColumnName(@"col173")]
            public float Col173 { get; set; }

            [LoadColumn(174)]
            [ColumnName(@"col174")]
            public float Col174 { get; set; }

            [LoadColumn(175)]
            [ColumnName(@"col175")]
            public float Col175 { get; set; }

            [LoadColumn(176)]
            [ColumnName(@"col176")]
            public float Col176 { get; set; }

            [LoadColumn(177)]
            [ColumnName(@"col177")]
            public float Col177 { get; set; }

            [LoadColumn(178)]
            [ColumnName(@"col178")]
            public float Col178 { get; set; }

            [LoadColumn(179)]
            [ColumnName(@"col179")]
            public float Col179 { get; set; }

            [LoadColumn(180)]
            [ColumnName(@"col180")]
            public float Col180 { get; set; }

            [LoadColumn(181)]
            [ColumnName(@"col181")]
            public float Col181 { get; set; }

            [LoadColumn(182)]
            [ColumnName(@"col182")]
            public float Col182 { get; set; }

            [LoadColumn(183)]
            [ColumnName(@"col183")]
            public float Col183 { get; set; }

            [LoadColumn(184)]
            [ColumnName(@"col184")]
            public float Col184 { get; set; }

            [LoadColumn(185)]
            [ColumnName(@"col185")]
            public float Col185 { get; set; }

            [LoadColumn(186)]
            [ColumnName(@"col186")]
            public float Col186 { get; set; }

            [LoadColumn(187)]
            [ColumnName(@"col187")]
            public float Col187 { get; set; }

            [LoadColumn(188)]
            [ColumnName(@"col188")]
            public float Col188 { get; set; }

            [LoadColumn(189)]
            [ColumnName(@"col189")]
            public float Col189 { get; set; }

            [LoadColumn(190)]
            [ColumnName(@"col190")]
            public float Col190 { get; set; }

            [LoadColumn(191)]
            [ColumnName(@"col191")]
            public float Col191 { get; set; }

            [LoadColumn(192)]
            [ColumnName(@"col192")]
            public float Col192 { get; set; }

            [LoadColumn(193)]
            [ColumnName(@"col193")]
            public float Col193 { get; set; }

            [LoadColumn(194)]
            [ColumnName(@"col194")]
            public float Col194 { get; set; }

            [LoadColumn(195)]
            [ColumnName(@"col195")]
            public float Col195 { get; set; }

            [LoadColumn(196)]
            [ColumnName(@"col196")]
            public float Col196 { get; set; }

            [LoadColumn(197)]
            [ColumnName(@"col197")]
            public float Col197 { get; set; }

            [LoadColumn(198)]
            [ColumnName(@"col198")]
            public float Col198 { get; set; }

            [LoadColumn(199)]
            [ColumnName(@"col199")]
            public float Col199 { get; set; }

            [LoadColumn(200)]
            [ColumnName(@"col200")]
            public float Col200 { get; set; }

            [LoadColumn(201)]
            [ColumnName(@"col201")]
            public float Col201 { get; set; }

            [LoadColumn(202)]
            [ColumnName(@"col202")]
            public float Col202 { get; set; }

            [LoadColumn(203)]
            [ColumnName(@"col203")]
            public float Col203 { get; set; }

            [LoadColumn(204)]
            [ColumnName(@"col204")]
            public float Col204 { get; set; }

            [LoadColumn(205)]
            [ColumnName(@"col205")]
            public float Col205 { get; set; }

            [LoadColumn(206)]
            [ColumnName(@"col206")]
            public float Col206 { get; set; }

            [LoadColumn(207)]
            [ColumnName(@"col207")]
            public float Col207 { get; set; }

            [LoadColumn(208)]
            [ColumnName(@"col208")]
            public float Col208 { get; set; }

            [LoadColumn(209)]
            [ColumnName(@"col209")]
            public float Col209 { get; set; }

            [LoadColumn(210)]
            [ColumnName(@"col210")]
            public float Col210 { get; set; }

            [LoadColumn(211)]
            [ColumnName(@"col211")]
            public float Col211 { get; set; }

            [LoadColumn(212)]
            [ColumnName(@"col212")]
            public float Col212 { get; set; }

            [LoadColumn(213)]
            [ColumnName(@"col213")]
            public float Col213 { get; set; }

            [LoadColumn(214)]
            [ColumnName(@"col214")]
            public float Col214 { get; set; }

            [LoadColumn(215)]
            [ColumnName(@"col215")]
            public float Col215 { get; set; }

            [LoadColumn(216)]
            [ColumnName(@"col216")]
            public float Col216 { get; set; }

            [LoadColumn(217)]
            [ColumnName(@"col217")]
            public float Col217 { get; set; }

            [LoadColumn(218)]
            [ColumnName(@"col218")]
            public float Col218 { get; set; }

            [LoadColumn(219)]
            [ColumnName(@"col219")]
            public float Col219 { get; set; }

            [LoadColumn(220)]
            [ColumnName(@"col220")]
            public float Col220 { get; set; }

            [LoadColumn(221)]
            [ColumnName(@"col221")]
            public float Col221 { get; set; }

            [LoadColumn(222)]
            [ColumnName(@"col222")]
            public float Col222 { get; set; }

            [LoadColumn(223)]
            [ColumnName(@"col223")]
            public float Col223 { get; set; }

            [LoadColumn(224)]
            [ColumnName(@"col224")]
            public float Col224 { get; set; }

            [LoadColumn(225)]
            [ColumnName(@"col225")]
            public float Col225 { get; set; }

            [LoadColumn(226)]
            [ColumnName(@"col226")]
            public float Col226 { get; set; }

            [LoadColumn(227)]
            [ColumnName(@"col227")]
            public float Col227 { get; set; }

            [LoadColumn(228)]
            [ColumnName(@"col228")]
            public float Col228 { get; set; }

            [LoadColumn(229)]
            [ColumnName(@"col229")]
            public float Col229 { get; set; }

            [LoadColumn(230)]
            [ColumnName(@"col230")]
            public float Col230 { get; set; }

            [LoadColumn(231)]
            [ColumnName(@"col231")]
            public float Col231 { get; set; }

            [LoadColumn(232)]
            [ColumnName(@"col232")]
            public float Col232 { get; set; }

            [LoadColumn(233)]
            [ColumnName(@"col233")]
            public float Col233 { get; set; }

            [LoadColumn(234)]
            [ColumnName(@"col234")]
            public float Col234 { get; set; }

            [LoadColumn(235)]
            [ColumnName(@"col235")]
            public float Col235 { get; set; }

            [LoadColumn(236)]
            [ColumnName(@"col236")]
            public float Col236 { get; set; }

            [LoadColumn(237)]
            [ColumnName(@"col237")]
            public float Col237 { get; set; }

            [LoadColumn(238)]
            [ColumnName(@"col238")]
            public float Col238 { get; set; }

            [LoadColumn(239)]
            [ColumnName(@"col239")]
            public float Col239 { get; set; }

            [LoadColumn(240)]
            [ColumnName(@"col240")]
            public float Col240 { get; set; }

            [LoadColumn(241)]
            [ColumnName(@"col241")]
            public float Col241 { get; set; }

            [LoadColumn(242)]
            [ColumnName(@"col242")]
            public float Col242 { get; set; }

            [LoadColumn(243)]
            [ColumnName(@"col243")]
            public float Col243 { get; set; }

            [LoadColumn(244)]
            [ColumnName(@"col244")]
            public float Col244 { get; set; }

            [LoadColumn(245)]
            [ColumnName(@"col245")]
            public float Col245 { get; set; }

            [LoadColumn(246)]
            [ColumnName(@"col246")]
            public float Col246 { get; set; }

            [LoadColumn(247)]
            [ColumnName(@"col247")]
            public float Col247 { get; set; }

            [LoadColumn(248)]
            [ColumnName(@"col248")]
            public float Col248 { get; set; }

            [LoadColumn(249)]
            [ColumnName(@"col249")]
            public float Col249 { get; set; }

            [LoadColumn(250)]
            [ColumnName(@"col250")]
            public float Col250 { get; set; }

            [LoadColumn(251)]
            [ColumnName(@"col251")]
            public float Col251 { get; set; }

            [LoadColumn(252)]
            [ColumnName(@"col252")]
            public float Col252 { get; set; }

            [LoadColumn(253)]
            [ColumnName(@"col253")]
            public float Col253 { get; set; }

            [LoadColumn(254)]
            [ColumnName(@"col254")]
            public float Col254 { get; set; }

            [LoadColumn(255)]
            [ColumnName(@"col255")]
            public float Col255 { get; set; }

            [LoadColumn(256)]
            [ColumnName(@"col256")]
            public float Col256 { get; set; }

            [LoadColumn(257)]
            [ColumnName(@"col257")]
            public float Col257 { get; set; }

            [LoadColumn(258)]
            [ColumnName(@"col258")]
            public float Col258 { get; set; }

            [LoadColumn(259)]
            [ColumnName(@"col259")]
            public float Col259 { get; set; }

            [LoadColumn(260)]
            [ColumnName(@"col260")]
            public float Col260 { get; set; }

            [LoadColumn(261)]
            [ColumnName(@"col261")]
            public float Col261 { get; set; }

            [LoadColumn(262)]
            [ColumnName(@"col262")]
            public float Col262 { get; set; }

            [LoadColumn(263)]
            [ColumnName(@"col263")]
            public float Col263 { get; set; }

            [LoadColumn(264)]
            [ColumnName(@"col264")]
            public float Col264 { get; set; }

            [LoadColumn(265)]
            [ColumnName(@"col265")]
            public float Col265 { get; set; }

            [LoadColumn(266)]
            [ColumnName(@"col266")]
            public float Col266 { get; set; }

            [LoadColumn(267)]
            [ColumnName(@"col267")]
            public float Col267 { get; set; }

            [LoadColumn(268)]
            [ColumnName(@"col268")]
            public float Col268 { get; set; }

            [LoadColumn(269)]
            [ColumnName(@"col269")]
            public float Col269 { get; set; }

            [LoadColumn(270)]
            [ColumnName(@"col270")]
            public float Col270 { get; set; }

            [LoadColumn(271)]
            [ColumnName(@"col271")]
            public float Col271 { get; set; }

            [LoadColumn(272)]
            [ColumnName(@"col272")]
            public float Col272 { get; set; }

            [LoadColumn(273)]
            [ColumnName(@"col273")]
            public float Col273 { get; set; }

            [LoadColumn(274)]
            [ColumnName(@"col274")]
            public float Col274 { get; set; }

            [LoadColumn(275)]
            [ColumnName(@"col275")]
            public float Col275 { get; set; }

            [LoadColumn(276)]
            [ColumnName(@"col276")]
            public float Col276 { get; set; }

            [LoadColumn(277)]
            [ColumnName(@"col277")]
            public float Col277 { get; set; }

            [LoadColumn(278)]
            [ColumnName(@"col278")]
            public float Col278 { get; set; }

            [LoadColumn(279)]
            [ColumnName(@"col279")]
            public float Col279 { get; set; }

            [LoadColumn(280)]
            [ColumnName(@"col280")]
            public float Col280 { get; set; }

            [LoadColumn(281)]
            [ColumnName(@"col281")]
            public float Col281 { get; set; }

            [LoadColumn(282)]
            [ColumnName(@"col282")]
            public float Col282 { get; set; }

            [LoadColumn(283)]
            [ColumnName(@"col283")]
            public float Col283 { get; set; }

            [LoadColumn(284)]
            [ColumnName(@"col284")]
            public float Col284 { get; set; }

            [LoadColumn(285)]
            [ColumnName(@"col285")]
            public float Col285 { get; set; }

            [LoadColumn(286)]
            [ColumnName(@"col286")]
            public float Col286 { get; set; }

            [LoadColumn(287)]
            [ColumnName(@"col287")]
            public float Col287 { get; set; }

            [LoadColumn(288)]
            [ColumnName(@"col288")]
            public float Col288 { get; set; }

            [LoadColumn(289)]
            [ColumnName(@"col289")]
            public float Col289 { get; set; }

            [LoadColumn(290)]
            [ColumnName(@"col290")]
            public float Col290 { get; set; }

            [LoadColumn(291)]
            [ColumnName(@"col291")]
            public float Col291 { get; set; }

            [LoadColumn(292)]
            [ColumnName(@"col292")]
            public float Col292 { get; set; }

            [LoadColumn(293)]
            [ColumnName(@"col293")]
            public float Col293 { get; set; }

            [LoadColumn(294)]
            [ColumnName(@"col294")]
            public float Col294 { get; set; }

            [LoadColumn(295)]
            [ColumnName(@"col295")]
            public float Col295 { get; set; }

            [LoadColumn(296)]
            [ColumnName(@"col296")]
            public float Col296 { get; set; }

            [LoadColumn(297)]
            [ColumnName(@"col297")]
            public float Col297 { get; set; }

            [LoadColumn(298)]
            [ColumnName(@"col298")]
            public float Col298 { get; set; }

            [LoadColumn(299)]
            [ColumnName(@"col299")]
            public float Col299 { get; set; }

            [LoadColumn(300)]
            [ColumnName(@"col300")]
            public float Col300 { get; set; }

            [LoadColumn(301)]
            [ColumnName(@"col301")]
            public float Col301 { get; set; }

            [LoadColumn(302)]
            [ColumnName(@"col302")]
            public float Col302 { get; set; }

            [LoadColumn(303)]
            [ColumnName(@"col303")]
            public float Col303 { get; set; }

            [LoadColumn(304)]
            [ColumnName(@"col304")]
            public float Col304 { get; set; }

            [LoadColumn(305)]
            [ColumnName(@"col305")]
            public float Col305 { get; set; }

            [LoadColumn(306)]
            [ColumnName(@"col306")]
            public float Col306 { get; set; }

            [LoadColumn(307)]
            [ColumnName(@"col307")]
            public float Col307 { get; set; }

            [LoadColumn(308)]
            [ColumnName(@"col308")]
            public float Col308 { get; set; }

            [LoadColumn(309)]
            [ColumnName(@"col309")]
            public float Col309 { get; set; }

            [LoadColumn(310)]
            [ColumnName(@"col310")]
            public float Col310 { get; set; }

            [LoadColumn(311)]
            [ColumnName(@"col311")]
            public float Col311 { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for StaticDetector.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"col0")]
            public float[] Col0 { get; set; }

            [ColumnName(@"col1")]
            public float Col1 { get; set; }

            [ColumnName(@"col2")]
            public float Col2 { get; set; }

            [ColumnName(@"col3")]
            public float Col3 { get; set; }

            [ColumnName(@"col4")]
            public float Col4 { get; set; }

            [ColumnName(@"col5")]
            public float Col5 { get; set; }

            [ColumnName(@"col6")]
            public float Col6 { get; set; }

            [ColumnName(@"col7")]
            public float Col7 { get; set; }

            [ColumnName(@"col8")]
            public float Col8 { get; set; }

            [ColumnName(@"col9")]
            public float Col9 { get; set; }

            [ColumnName(@"col10")]
            public float Col10 { get; set; }

            [ColumnName(@"col11")]
            public float Col11 { get; set; }

            [ColumnName(@"col12")]
            public float Col12 { get; set; }

            [ColumnName(@"col13")]
            public float Col13 { get; set; }

            [ColumnName(@"col14")]
            public float Col14 { get; set; }

            [ColumnName(@"col15")]
            public float Col15 { get; set; }

            [ColumnName(@"col16")]
            public float Col16 { get; set; }

            [ColumnName(@"col17")]
            public float Col17 { get; set; }

            [ColumnName(@"col18")]
            public float Col18 { get; set; }

            [ColumnName(@"col19")]
            public float Col19 { get; set; }

            [ColumnName(@"col20")]
            public float Col20 { get; set; }

            [ColumnName(@"col21")]
            public float Col21 { get; set; }

            [ColumnName(@"col22")]
            public float Col22 { get; set; }

            [ColumnName(@"col23")]
            public float Col23 { get; set; }

            [ColumnName(@"col24")]
            public float Col24 { get; set; }

            [ColumnName(@"col25")]
            public float Col25 { get; set; }

            [ColumnName(@"col26")]
            public float Col26 { get; set; }

            [ColumnName(@"col27")]
            public float Col27 { get; set; }

            [ColumnName(@"col28")]
            public float Col28 { get; set; }

            [ColumnName(@"col29")]
            public float Col29 { get; set; }

            [ColumnName(@"col30")]
            public float Col30 { get; set; }

            [ColumnName(@"col31")]
            public float Col31 { get; set; }

            [ColumnName(@"col32")]
            public float Col32 { get; set; }

            [ColumnName(@"col33")]
            public float Col33 { get; set; }

            [ColumnName(@"col34")]
            public float Col34 { get; set; }

            [ColumnName(@"col35")]
            public float Col35 { get; set; }

            [ColumnName(@"col36")]
            public float Col36 { get; set; }

            [ColumnName(@"col37")]
            public float Col37 { get; set; }

            [ColumnName(@"col38")]
            public float Col38 { get; set; }

            [ColumnName(@"col39")]
            public float Col39 { get; set; }

            [ColumnName(@"col40")]
            public float Col40 { get; set; }

            [ColumnName(@"col41")]
            public float Col41 { get; set; }

            [ColumnName(@"col42")]
            public float Col42 { get; set; }

            [ColumnName(@"col43")]
            public float Col43 { get; set; }

            [ColumnName(@"col44")]
            public float Col44 { get; set; }

            [ColumnName(@"col45")]
            public float Col45 { get; set; }

            [ColumnName(@"col46")]
            public float Col46 { get; set; }

            [ColumnName(@"col47")]
            public float Col47 { get; set; }

            [ColumnName(@"col48")]
            public float Col48 { get; set; }

            [ColumnName(@"col49")]
            public float Col49 { get; set; }

            [ColumnName(@"col50")]
            public float Col50 { get; set; }

            [ColumnName(@"col51")]
            public float Col51 { get; set; }

            [ColumnName(@"col52")]
            public float Col52 { get; set; }

            [ColumnName(@"col53")]
            public float Col53 { get; set; }

            [ColumnName(@"col54")]
            public float Col54 { get; set; }

            [ColumnName(@"col55")]
            public float Col55 { get; set; }

            [ColumnName(@"col56")]
            public float Col56 { get; set; }

            [ColumnName(@"col57")]
            public float Col57 { get; set; }

            [ColumnName(@"col58")]
            public float Col58 { get; set; }

            [ColumnName(@"col59")]
            public float Col59 { get; set; }

            [ColumnName(@"col60")]
            public float Col60 { get; set; }

            [ColumnName(@"col61")]
            public float Col61 { get; set; }

            [ColumnName(@"col62")]
            public float Col62 { get; set; }

            [ColumnName(@"col63")]
            public float Col63 { get; set; }

            [ColumnName(@"col64")]
            public float Col64 { get; set; }

            [ColumnName(@"col65")]
            public float Col65 { get; set; }

            [ColumnName(@"col66")]
            public float Col66 { get; set; }

            [ColumnName(@"col67")]
            public float Col67 { get; set; }

            [ColumnName(@"col68")]
            public float Col68 { get; set; }

            [ColumnName(@"col69")]
            public float Col69 { get; set; }

            [ColumnName(@"col70")]
            public float Col70 { get; set; }

            [ColumnName(@"col71")]
            public float Col71 { get; set; }

            [ColumnName(@"col72")]
            public float Col72 { get; set; }

            [ColumnName(@"col73")]
            public float Col73 { get; set; }

            [ColumnName(@"col74")]
            public float Col74 { get; set; }

            [ColumnName(@"col75")]
            public float Col75 { get; set; }

            [ColumnName(@"col76")]
            public float Col76 { get; set; }

            [ColumnName(@"col77")]
            public float Col77 { get; set; }

            [ColumnName(@"col78")]
            public float Col78 { get; set; }

            [ColumnName(@"col79")]
            public float Col79 { get; set; }

            [ColumnName(@"col80")]
            public float Col80 { get; set; }

            [ColumnName(@"col81")]
            public float Col81 { get; set; }

            [ColumnName(@"col82")]
            public float Col82 { get; set; }

            [ColumnName(@"col83")]
            public float Col83 { get; set; }

            [ColumnName(@"col84")]
            public float Col84 { get; set; }

            [ColumnName(@"col85")]
            public float Col85 { get; set; }

            [ColumnName(@"col86")]
            public float Col86 { get; set; }

            [ColumnName(@"col87")]
            public float Col87 { get; set; }

            [ColumnName(@"col88")]
            public float Col88 { get; set; }

            [ColumnName(@"col89")]
            public float Col89 { get; set; }

            [ColumnName(@"col90")]
            public float Col90 { get; set; }

            [ColumnName(@"col91")]
            public float Col91 { get; set; }

            [ColumnName(@"col92")]
            public float Col92 { get; set; }

            [ColumnName(@"col93")]
            public float Col93 { get; set; }

            [ColumnName(@"col94")]
            public float Col94 { get; set; }

            [ColumnName(@"col95")]
            public float Col95 { get; set; }

            [ColumnName(@"col96")]
            public float Col96 { get; set; }

            [ColumnName(@"col97")]
            public float Col97 { get; set; }

            [ColumnName(@"col98")]
            public float Col98 { get; set; }

            [ColumnName(@"col99")]
            public float Col99 { get; set; }

            [ColumnName(@"col100")]
            public float Col100 { get; set; }

            [ColumnName(@"col101")]
            public float Col101 { get; set; }

            [ColumnName(@"col102")]
            public float Col102 { get; set; }

            [ColumnName(@"col103")]
            public float Col103 { get; set; }

            [ColumnName(@"col104")]
            public float Col104 { get; set; }

            [ColumnName(@"col105")]
            public float Col105 { get; set; }

            [ColumnName(@"col106")]
            public float Col106 { get; set; }

            [ColumnName(@"col107")]
            public float Col107 { get; set; }

            [ColumnName(@"col108")]
            public float Col108 { get; set; }

            [ColumnName(@"col109")]
            public float Col109 { get; set; }

            [ColumnName(@"col110")]
            public float Col110 { get; set; }

            [ColumnName(@"col111")]
            public float Col111 { get; set; }

            [ColumnName(@"col112")]
            public float Col112 { get; set; }

            [ColumnName(@"col113")]
            public float Col113 { get; set; }

            [ColumnName(@"col114")]
            public float Col114 { get; set; }

            [ColumnName(@"col115")]
            public float Col115 { get; set; }

            [ColumnName(@"col116")]
            public float Col116 { get; set; }

            [ColumnName(@"col117")]
            public float Col117 { get; set; }

            [ColumnName(@"col118")]
            public float Col118 { get; set; }

            [ColumnName(@"col119")]
            public float Col119 { get; set; }

            [ColumnName(@"col120")]
            public float Col120 { get; set; }

            [ColumnName(@"col121")]
            public float Col121 { get; set; }

            [ColumnName(@"col122")]
            public float Col122 { get; set; }

            [ColumnName(@"col123")]
            public float Col123 { get; set; }

            [ColumnName(@"col124")]
            public float Col124 { get; set; }

            [ColumnName(@"col125")]
            public float Col125 { get; set; }

            [ColumnName(@"col126")]
            public float Col126 { get; set; }

            [ColumnName(@"col127")]
            public float Col127 { get; set; }

            [ColumnName(@"col128")]
            public float Col128 { get; set; }

            [ColumnName(@"col129")]
            public float Col129 { get; set; }

            [ColumnName(@"col130")]
            public float Col130 { get; set; }

            [ColumnName(@"col131")]
            public float Col131 { get; set; }

            [ColumnName(@"col132")]
            public float Col132 { get; set; }

            [ColumnName(@"col133")]
            public float Col133 { get; set; }

            [ColumnName(@"col134")]
            public float Col134 { get; set; }

            [ColumnName(@"col135")]
            public float Col135 { get; set; }

            [ColumnName(@"col136")]
            public float Col136 { get; set; }

            [ColumnName(@"col137")]
            public float Col137 { get; set; }

            [ColumnName(@"col138")]
            public float Col138 { get; set; }

            [ColumnName(@"col139")]
            public float Col139 { get; set; }

            [ColumnName(@"col140")]
            public float Col140 { get; set; }

            [ColumnName(@"col141")]
            public float Col141 { get; set; }

            [ColumnName(@"col142")]
            public float Col142 { get; set; }

            [ColumnName(@"col143")]
            public float Col143 { get; set; }

            [ColumnName(@"col144")]
            public float Col144 { get; set; }

            [ColumnName(@"col145")]
            public float Col145 { get; set; }

            [ColumnName(@"col146")]
            public float Col146 { get; set; }

            [ColumnName(@"col147")]
            public float Col147 { get; set; }

            [ColumnName(@"col148")]
            public float Col148 { get; set; }

            [ColumnName(@"col149")]
            public float Col149 { get; set; }

            [ColumnName(@"col150")]
            public float Col150 { get; set; }

            [ColumnName(@"col151")]
            public float Col151 { get; set; }

            [ColumnName(@"col152")]
            public float Col152 { get; set; }

            [ColumnName(@"col153")]
            public float Col153 { get; set; }

            [ColumnName(@"col154")]
            public float Col154 { get; set; }

            [ColumnName(@"col155")]
            public float Col155 { get; set; }

            [ColumnName(@"col156")]
            public float Col156 { get; set; }

            [ColumnName(@"col157")]
            public float Col157 { get; set; }

            [ColumnName(@"col158")]
            public float Col158 { get; set; }

            [ColumnName(@"col159")]
            public float Col159 { get; set; }

            [ColumnName(@"col160")]
            public float Col160 { get; set; }

            [ColumnName(@"col161")]
            public float Col161 { get; set; }

            [ColumnName(@"col162")]
            public float Col162 { get; set; }

            [ColumnName(@"col163")]
            public float Col163 { get; set; }

            [ColumnName(@"col164")]
            public float Col164 { get; set; }

            [ColumnName(@"col165")]
            public float Col165 { get; set; }

            [ColumnName(@"col166")]
            public float Col166 { get; set; }

            [ColumnName(@"col167")]
            public float Col167 { get; set; }

            [ColumnName(@"col168")]
            public float Col168 { get; set; }

            [ColumnName(@"col169")]
            public float Col169 { get; set; }

            [ColumnName(@"col170")]
            public float Col170 { get; set; }

            [ColumnName(@"col171")]
            public float Col171 { get; set; }

            [ColumnName(@"col172")]
            public float Col172 { get; set; }

            [ColumnName(@"col173")]
            public float Col173 { get; set; }

            [ColumnName(@"col174")]
            public float Col174 { get; set; }

            [ColumnName(@"col175")]
            public float Col175 { get; set; }

            [ColumnName(@"col176")]
            public float Col176 { get; set; }

            [ColumnName(@"col177")]
            public float Col177 { get; set; }

            [ColumnName(@"col178")]
            public float Col178 { get; set; }

            [ColumnName(@"col179")]
            public float Col179 { get; set; }

            [ColumnName(@"col180")]
            public float Col180 { get; set; }

            [ColumnName(@"col181")]
            public float Col181 { get; set; }

            [ColumnName(@"col182")]
            public float Col182 { get; set; }

            [ColumnName(@"col183")]
            public float Col183 { get; set; }

            [ColumnName(@"col184")]
            public float Col184 { get; set; }

            [ColumnName(@"col185")]
            public float Col185 { get; set; }

            [ColumnName(@"col186")]
            public float Col186 { get; set; }

            [ColumnName(@"col187")]
            public float Col187 { get; set; }

            [ColumnName(@"col188")]
            public float Col188 { get; set; }

            [ColumnName(@"col189")]
            public float Col189 { get; set; }

            [ColumnName(@"col190")]
            public float Col190 { get; set; }

            [ColumnName(@"col191")]
            public float Col191 { get; set; }

            [ColumnName(@"col192")]
            public float Col192 { get; set; }

            [ColumnName(@"col193")]
            public float Col193 { get; set; }

            [ColumnName(@"col194")]
            public float Col194 { get; set; }

            [ColumnName(@"col195")]
            public float Col195 { get; set; }

            [ColumnName(@"col196")]
            public float Col196 { get; set; }

            [ColumnName(@"col197")]
            public float Col197 { get; set; }

            [ColumnName(@"col198")]
            public float Col198 { get; set; }

            [ColumnName(@"col199")]
            public float Col199 { get; set; }

            [ColumnName(@"col200")]
            public float Col200 { get; set; }

            [ColumnName(@"col201")]
            public float Col201 { get; set; }

            [ColumnName(@"col202")]
            public float Col202 { get; set; }

            [ColumnName(@"col203")]
            public float Col203 { get; set; }

            [ColumnName(@"col204")]
            public float Col204 { get; set; }

            [ColumnName(@"col205")]
            public float Col205 { get; set; }

            [ColumnName(@"col206")]
            public float Col206 { get; set; }

            [ColumnName(@"col207")]
            public float Col207 { get; set; }

            [ColumnName(@"col208")]
            public float Col208 { get; set; }

            [ColumnName(@"col209")]
            public float Col209 { get; set; }

            [ColumnName(@"col210")]
            public float Col210 { get; set; }

            [ColumnName(@"col211")]
            public float Col211 { get; set; }

            [ColumnName(@"col212")]
            public float Col212 { get; set; }

            [ColumnName(@"col213")]
            public float Col213 { get; set; }

            [ColumnName(@"col214")]
            public float Col214 { get; set; }

            [ColumnName(@"col215")]
            public float Col215 { get; set; }

            [ColumnName(@"col216")]
            public float Col216 { get; set; }

            [ColumnName(@"col217")]
            public float Col217 { get; set; }

            [ColumnName(@"col218")]
            public float Col218 { get; set; }

            [ColumnName(@"col219")]
            public float Col219 { get; set; }

            [ColumnName(@"col220")]
            public float Col220 { get; set; }

            [ColumnName(@"col221")]
            public float Col221 { get; set; }

            [ColumnName(@"col222")]
            public float Col222 { get; set; }

            [ColumnName(@"col223")]
            public float Col223 { get; set; }

            [ColumnName(@"col224")]
            public float Col224 { get; set; }

            [ColumnName(@"col225")]
            public float Col225 { get; set; }

            [ColumnName(@"col226")]
            public float Col226 { get; set; }

            [ColumnName(@"col227")]
            public float Col227 { get; set; }

            [ColumnName(@"col228")]
            public float Col228 { get; set; }

            [ColumnName(@"col229")]
            public float Col229 { get; set; }

            [ColumnName(@"col230")]
            public float Col230 { get; set; }

            [ColumnName(@"col231")]
            public float Col231 { get; set; }

            [ColumnName(@"col232")]
            public float Col232 { get; set; }

            [ColumnName(@"col233")]
            public float Col233 { get; set; }

            [ColumnName(@"col234")]
            public float Col234 { get; set; }

            [ColumnName(@"col235")]
            public float Col235 { get; set; }

            [ColumnName(@"col236")]
            public float Col236 { get; set; }

            [ColumnName(@"col237")]
            public float Col237 { get; set; }

            [ColumnName(@"col238")]
            public float Col238 { get; set; }

            [ColumnName(@"col239")]
            public float Col239 { get; set; }

            [ColumnName(@"col240")]
            public float Col240 { get; set; }

            [ColumnName(@"col241")]
            public float Col241 { get; set; }

            [ColumnName(@"col242")]
            public float Col242 { get; set; }

            [ColumnName(@"col243")]
            public float Col243 { get; set; }

            [ColumnName(@"col244")]
            public float Col244 { get; set; }

            [ColumnName(@"col245")]
            public float Col245 { get; set; }

            [ColumnName(@"col246")]
            public float Col246 { get; set; }

            [ColumnName(@"col247")]
            public float Col247 { get; set; }

            [ColumnName(@"col248")]
            public float Col248 { get; set; }

            [ColumnName(@"col249")]
            public float Col249 { get; set; }

            [ColumnName(@"col250")]
            public float Col250 { get; set; }

            [ColumnName(@"col251")]
            public float Col251 { get; set; }

            [ColumnName(@"col252")]
            public float Col252 { get; set; }

            [ColumnName(@"col253")]
            public float Col253 { get; set; }

            [ColumnName(@"col254")]
            public float Col254 { get; set; }

            [ColumnName(@"col255")]
            public float Col255 { get; set; }

            [ColumnName(@"col256")]
            public float Col256 { get; set; }

            [ColumnName(@"col257")]
            public float Col257 { get; set; }

            [ColumnName(@"col258")]
            public float Col258 { get; set; }

            [ColumnName(@"col259")]
            public float Col259 { get; set; }

            [ColumnName(@"col260")]
            public float Col260 { get; set; }

            [ColumnName(@"col261")]
            public float Col261 { get; set; }

            [ColumnName(@"col262")]
            public float Col262 { get; set; }

            [ColumnName(@"col263")]
            public float Col263 { get; set; }

            [ColumnName(@"col264")]
            public float Col264 { get; set; }

            [ColumnName(@"col265")]
            public float Col265 { get; set; }

            [ColumnName(@"col266")]
            public float Col266 { get; set; }

            [ColumnName(@"col267")]
            public float Col267 { get; set; }

            [ColumnName(@"col268")]
            public float Col268 { get; set; }

            [ColumnName(@"col269")]
            public float Col269 { get; set; }

            [ColumnName(@"col270")]
            public float Col270 { get; set; }

            [ColumnName(@"col271")]
            public float Col271 { get; set; }

            [ColumnName(@"col272")]
            public float Col272 { get; set; }

            [ColumnName(@"col273")]
            public float Col273 { get; set; }

            [ColumnName(@"col274")]
            public float Col274 { get; set; }

            [ColumnName(@"col275")]
            public float Col275 { get; set; }

            [ColumnName(@"col276")]
            public float Col276 { get; set; }

            [ColumnName(@"col277")]
            public float Col277 { get; set; }

            [ColumnName(@"col278")]
            public float Col278 { get; set; }

            [ColumnName(@"col279")]
            public float Col279 { get; set; }

            [ColumnName(@"col280")]
            public float Col280 { get; set; }

            [ColumnName(@"col281")]
            public float Col281 { get; set; }

            [ColumnName(@"col282")]
            public float Col282 { get; set; }

            [ColumnName(@"col283")]
            public float Col283 { get; set; }

            [ColumnName(@"col284")]
            public float Col284 { get; set; }

            [ColumnName(@"col285")]
            public float Col285 { get; set; }

            [ColumnName(@"col286")]
            public float Col286 { get; set; }

            [ColumnName(@"col287")]
            public float Col287 { get; set; }

            [ColumnName(@"col288")]
            public float Col288 { get; set; }

            [ColumnName(@"col289")]
            public float Col289 { get; set; }

            [ColumnName(@"col290")]
            public float Col290 { get; set; }

            [ColumnName(@"col291")]
            public float Col291 { get; set; }

            [ColumnName(@"col292")]
            public float Col292 { get; set; }

            [ColumnName(@"col293")]
            public float Col293 { get; set; }

            [ColumnName(@"col294")]
            public float Col294 { get; set; }

            [ColumnName(@"col295")]
            public float Col295 { get; set; }

            [ColumnName(@"col296")]
            public float Col296 { get; set; }

            [ColumnName(@"col297")]
            public float Col297 { get; set; }

            [ColumnName(@"col298")]
            public float Col298 { get; set; }

            [ColumnName(@"col299")]
            public float Col299 { get; set; }

            [ColumnName(@"col300")]
            public float Col300 { get; set; }

            [ColumnName(@"col301")]
            public float Col301 { get; set; }

            [ColumnName(@"col302")]
            public float Col302 { get; set; }

            [ColumnName(@"col303")]
            public float Col303 { get; set; }

            [ColumnName(@"col304")]
            public float Col304 { get; set; }

            [ColumnName(@"col305")]
            public float Col305 { get; set; }

            [ColumnName(@"col306")]
            public float Col306 { get; set; }

            [ColumnName(@"col307")]
            public float Col307 { get; set; }

            [ColumnName(@"col308")]
            public float Col308 { get; set; }

            [ColumnName(@"col309")]
            public float Col309 { get; set; }

            [ColumnName(@"col310")]
            public float Col310 { get; set; }

            [ColumnName(@"col311")]
            public float Col311 { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        public static string directoryName = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);
        private static string MLNetModelPath = directoryName + "\\Model\\StaticDetector.mlnet";

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

    }
}

public static class Extensions
{
    public static T[] Slice<T>(this T[] source, int start, int end)
    {
        if (end < 0)
        {
            end = source.Length + end;
        }
        int len = end - start;

        T[] res = new T[len];
        for (int i = 0; i < len; i++)
        {
            res[i] = source[i + start];
        }
        return res;
    }
}